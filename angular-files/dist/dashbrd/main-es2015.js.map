{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/app-routing.module.ts","./src/app/app-service.service.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/charts/charts.component.ts","./src/app/charts/charts.component.html","./src/app/indicateurs/indicateurs.component.ts","./src/app/indicateurs/indicateurs.component.html","./src/app/map/map.component.ts","./src/app/map/map.component.html","./src/app/navbar/navbar.component.ts","./src/app/navbar/navbar.component.html","./src/app/select-list/select-list.component.ts","./src/app/select-list/select-list.component.html","./src/environments/environment.ts","./src/helpers.ts","./src/main.ts"],"names":[],"mappings":";;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA,4CAA4C,WAAW;AACvD;AACA;AACA,wE;;;;;;;;;;;;ACZA;AAAA;AAAA;AAAA;AAAyC;AACc;;;AAGvD,MAAM,MAAM,GAAW,EAAE,CAAC;AAMnB,MAAM,gBAAgB;;+FAAhB,gBAAgB;0JAAhB,gBAAgB,kBAHlB,CAAC,4DAAY,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC;QAC7B,4DAAY;mIAEX,gBAAgB,uFAFjB,4DAAY;6FAEX,gBAAgB;cAJ5B,sDAAQ;eAAC;gBACR,OAAO,EAAE,CAAC,4DAAY,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC;gBACvC,OAAO,EAAE,CAAC,4DAAY,CAAC;aACxB;;;;;;;;;;;;;;ACRD;AAAA;AAAA;AAAA;AAA2C;;;AAKpC,MAAM,iBAAiB;IAE1B,YAAoB,IAAgB;QAAhB,SAAI,GAAJ,IAAI,CAAY;QACpC,YAAO,GAAG,UAAU,CAAC;IADmB,CAAC;IAEzC,UAAU,CAAC,KAAa;QACpB,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,OAAO,GAAG,aAAa,GAAG,KAAK,CAAC,CAAC;IAC/D,CAAC;IACD,eAAe,CAAC,KAAa;QACzB,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,OAAO,GAAG,SAAS,GAAG,KAAK,CAAC,CAAC;IAC3D,CAAC;;kFATQ,iBAAiB;oGAAjB,iBAAiB,WAAjB,iBAAiB,mBAFhB,MAAM;6FAEP,iBAAiB;cAH7B,wDAAU;eAAC;gBACV,UAAU,EAAE,MAAM;aACnB;;;;;;;;;;;;;;ACLD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA6D;AAC9B;AACY;AAEhB;AAC3B,mCAAmC;AACkC;AAC/B;AACN;AACY;AACkE;AAC7D;AACT;AACF;AAC+B;AACjC;AACS;AACT;AACyB;AAKC;AAEnC;AAC8B;;;;;;;;;;;;;;ICXjD,sFAAoK;IAA/F,0WAA4C;IAAiC,4DAAkB;;;IAArH,qFAAqB;;;IA0CxD,yEAAuC;IAAA,uDAAsB;;IAAA,4DAAK;;;IAA3B,0DAAsB;IAAtB,mJAAsB;;;IAC7D,yEAAwC;IAAA,uDAA8B;IAAA,4DAAK;;;;IAAnC,0DAA8B;IAA9B,0GAA8B;;;IAF1E,4EACI;IAAA,uHAAuC;IACvC,uHAAwC;IAC5C,qEAAe;;;IAHD,gFAAoB;;;IAKlC,oEAA4D;;;IAC5D,oEAAkE;;AD7B3E,MAAM,YAAY;IAQrB,YAAoB,OAAyB;QAAzB,YAAO,GAAP,OAAO,CAAkB;QAP7C,UAAK,GAAG,SAAS,CAAC;QAElB,aAAQ,GAAU,EAAE,CAAC;QAErB,yBAAoB,GAAU,EAAE,CAAC;QACjC,qBAAgB,GAAa,EAAE,CAAC;QAChC,aAAQ,GAAqB,IAAI,4CAAO,EAAW,CAAC;QAEpD,UAAK,GAAgB;YACjB,IAAI,sDAAS,CAAC;gBACV,KAAK,EAAE,KAAK;gBACZ,IAAI,EAAE,MAAM;gBACZ,OAAO,EAAE,IAAI;gBACb,MAAM,EAAE,IAAI,qDAAS,CAAC;oBAClB,GAAG;oBACH,YAAY,EAAE;wBACV,uBAAuB;qBAC1B;iBACJ,CAAC;aACe,CAAC;YACtB,IAAI,sDAAS,CAAC;gBACV,KAAK,EAAE,WAAW;gBAClB,IAAI,EAAE,MAAM;gBACZ,OAAO,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK;gBAC5B,MAAM,EAAE,IAAI,6CAAG,CAAC;oBACZ,YAAY,EAAE,IAAI;oBAClB,uBAAuB,EAAE,KAAK;oBAC9B,GAAG,EAAE,iGAAiG;oBACtG,OAAO,EAAE,EAAE;iBACd,CAAC;aACe,CAAC;YACtB,IAAI,sDAAS,CAAC;gBACV,KAAK,EAAE,aAAa;gBACpB,IAAI,EAAE,MAAM;gBACZ,OAAO,EAAE,KAAK;gBACd,MAAM,EAAE,IAAI,wDAAY,CAAC;oBACrB,KAAK,EAAE,YAAY;iBACtB,CAAC;aACe,CAAC;YACtB,IAAI,sDAAS,CAAC;gBACV,KAAK,EAAE,OAAO;gBACd,IAAI,EAAE,MAAM;gBACZ,OAAO,EAAE,KAAK;gBACd,MAAM,EAAE,IAAI,wDAAY,CAAC;oBACrB,KAAK,EAAE,OAAO;iBACjB,CAAC;aACe,CAAC;YACtB,IAAI,sDAAS,CAAC;gBACV,KAAK,EAAE,gBAAgB;gBACvB,IAAI,EAAE,MAAM;gBACZ,OAAO,EAAE,KAAK;gBACd,MAAM,EAAE,IAAI,wDAAY,CAAC;oBACrB,KAAK,EAAE,gBAAgB;iBAC1B,CAAC;aACe,CAAC;YACtB,IAAI,sDAAS,CAAC;gBACV,KAAK,EAAE,SAAS;gBAChB,IAAI,EAAE,MAAM;gBACZ,OAAO,EAAE,KAAK;gBACd,MAAM,EAAE,IAAI,wDAAY,CAAC;oBACrB,KAAK,EAAE,SAAS;iBACnB,CAAC;aACe,CAAC;SACzB,CAAC;QACM,aAAQ,GAAQ,IAAI,sDAAU,CAAC;YACnC,KAAK,EAAE,iBAAiB;YACxB,MAAM,EAAE,IAAI,CAAC,KAAK;YAClB,IAAI,EAAE,OAAO;SACK,CAAC,CAAC;QACxB,iDAAiD;QACjD,WAAM,GAAgB,IAAI,+CAAW,EAAE,CAAC;QAExC,sBAAiB,GAAW,CAAC,CAAC;QAE9B,uBAAkB,GAAG,CAAC,OAAgB,EAAS,EAAE;YAC7C,kCAAkC;YAClC,8CAA8C;YAC9C,IAAI,MAAM,GAAG,CAAC,EAAC,yBAAyB;YACxC,OAAO,IAAI,+CAAK,CAAC;gBACb,QAAQ,EAAE,OAAO,CAAC,WAAW,EAAE;gBAC/B,KAAK,EAAE,IAAI,gDAAM,CAAC;oBACd,MAAM,EAAE,MAAM;oBACd,IAAI,EAAE,IAAI,8CAAI,CAAC;wBACX,KAAK,EAAE,CAAC,GAAG,EAAE,CAAC,EAAE,CAAC,CAAC;qBACrB,CAAC;iBACL,CAAC;aACL,CAAC,CAAC;QACP,CAAC;QACD,wBAAmB,GAAG,CAAC,OAAgB,EAAW,EAAE;YAChD,IAAI,OAAO,GAAG,EAAE,CAAC;YACjB,IAAI,gBAAgB,GAAG,OAAO,CAAC,GAAG,CAAC,UAAU,CAAC,CAAC;YAC/C,iCAAiC;YACjC,IAAI,gBAAgB,EAAE;gBAClB,OAAO,CAAC,IAAI,CAAC,IAAI,+CAAK,CAAC;oBACnB,KAAK,EAAE,IAAI,gDAAM,CAAC;wBACd,MAAM,EAAE,OAAO,CAAC,GAAG,CAAC,QAAQ,CAAC;wBAC7B,IAAI,EAAE,IAAI,8CAAI,CAAC;4BACX,KAAK,EAAE,oBAAoB;yBAC9B,CAAC;qBACL,CAAC;iBACL,CAAC,CAAC,CAAC;gBACJ,gBAAgB,CAAC,OAAO,CAAC,CAAC,OAA0B,EAAE,EAAE;oBACpD,OAAO,CAAC,IAAI,CAAC,IAAI,CAAC,kBAAkB,CAAC,OAAO,CAAC,CAAC,CAAC;gBACnD,CAAC,CAAC,CAAC;aACN;YACD,OAAO,OAAO,CAAC;QACnB,CAAC;QACD,aAAQ,GAAG,CAAC,GAAW,EAAE,QAAgB,EAAE,OAAe,EAAe,EAAE;YACvE,IAAI,aAAa,GAAG,CAAC,OAAgB,EAAE,UAAkB,EAAS,EAAE;gBAChE,IAAI,UAAU,KAAK,IAAI,CAAC,iBAAiB,EAAE;oBACvC,oBAAoB,CAAC,UAAU,CAAC,CAAC;oBACjC,IAAI,CAAC,iBAAiB,GAAG,UAAU,CAAC;iBACvC;gBACD,IAAI,KAAK,CAAC;gBACV,IAAI,IAAI,GAAG,OAAO,CAAC,GAAG,CAAC,UAAU,CAAC,CAAC,MAAM,CAAC;gBAC1C,IAAI,IAAI,GAAG,CAAC,EAAE;oBACV,KAAK,GAAG,IAAI,+CAAK,CAAC;wBACd,KAAK,EAAE,IAAI,gDAAM,CAAC;4BACd,MAAM,EAAE,EAAE;4BACV,IAAI,EAAE,IAAI,8CAAI,CAAC;gCACX,KAAK,EAAE,OAAO;6BACjB,CAAC;yBACL,CAAC;wBACF,IAAI,EAAE,IAAI,8CAAI,CAAC;4BACX,IAAI,EAAE,IAAI,CAAC,QAAQ,EAAE;4BACrB,IAAI,EAAE,IAAI,8CAAI,CAAC;gCACX,KAAK,EAAE,MAAM;6BAChB,CAAC;4BACF,MAAM,EAAE,IAAI,gDAAM,CAAC;gCACf,KAAK,EAAE,kBAAkB;gCACzB,KAAK,EAAE,CAAC;6BACX,CAAC;yBACL,CAAC;qBACL,CAAC,CAAC;iBACN;qBAAM;oBACH,IAAI,eAAe,GAAG,OAAO,CAAC,GAAG,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC,CAAC;oBACjD,KAAK,GAAG,IAAI,CAAC,kBAAkB,CAAC,eAAe,CAAC,CAAC;iBACpD;gBACD,OAAO,KAAK,CAAC;YACjB,CAAC;YAED,IAAI,SAAS,GAAG,IAAI,gDAAY,CAAC;gBAC7B,MAAM,EAAE,IAAI,kDAAO,EAAE;gBACrB,GAAG;aAuBN,CAAC,CAAC;YACH,IAAI,MAAM,GAAG,IAAI,+CAAW,CAAC;gBACzB,KAAK,EAAE,kBAAkB;gBACzB,OAAO,EAAE,IAAI;gBACb,MAAM,EAAE,IAAI,iDAAO,CAAC;oBAChB,QAAQ;oBACR,MAAM,EAAE,SAAS;iBACpB,CAAC;gBACF,KAAK,EAAE,aAAa;aACH,CAAC,CAAC;YACvB,IAAI,oBAAoB,GAAG,CAAC,UAAkB,EAAQ,EAAE;gBACpD,mBAAmB;gBACnB,IAAI,QAAQ,GAAG,MAAM,CAAC,SAAS,EAAE,CAAC,WAAW,EAAE,CAAC;gBAChD,IAAI,OAAO,EAAE,MAAM,CAAC;gBACpB,KAAK,IAAI,CAAC,GAAG,QAAQ,CAAC,MAAM,GAAG,CAAC,EAAE,CAAC,IAAI,CAAC,EAAE,EAAE,CAAC,EAAE;oBAC3C,OAAO,GAAG,QAAQ,CAAC,CAAC,CAAC,CAAC;oBACtB,IAAI,gBAAgB,GAAG,OAAO,CAAC,GAAG,CAAC,UAAU,CAAC,CAAC;oBAC/C,IAAI,MAAM,GAAG,8DAAW,EAAE,CAAC;oBAC3B,IAAI,CAAC,GAAG,CAAC,EAAE,EAAE,GAAG,CAAC,CAAC;oBAClB,KAAK,CAAC,GAAG,CAAC,EAAE,EAAE,GAAG,gBAAgB,CAAC,MAAM,EAAE,CAAC,GAAG,EAAE,EAAE,EAAE,CAAC,EAAE;wBACnD,yDAAM,CAAC,MAAM,EAAE,gBAAgB,CAAC,CAAC,CAAC,CAAC,WAAW,EAAE,CAAC,SAAS,EAAE,CAAC,CAAC;qBACjE;oBACD,mDAAmD;oBACnD,MAAM,GAAG,IAAI,GAAG,CAAC,2DAAQ,CAAC,MAAM,CAAC,GAAG,4DAAS,CAAC,MAAM,CAAC,CAAC;wBAClD,UAAU,CAAC;oBACf,OAAO,CAAC,GAAG,CAAC,QAAQ,EAAE,MAAM,CAAC,CAAC;iBACjC;YACL,CAAC,CAAC;YACF,OAAO,MAAM,CAAC;QAClB,CAAC;QACD,8JAA8J;QAC9J,eAAU,GAAW,8BAA8B,CAAC;QACpD,qBAAgB,GAAG,IAAI,+CAAW,CAAC;YAC/B,MAAM,EAAE,IAAI,gDAAY,EAAE;YAC1B,KAAK,EAAC,IAAI,+CAAK,CAAC;gBACZ,MAAM,EAAE,IAAI,gDAAM,CAAC;oBACf,KAAK,EAAC,KAAK,EAAC,KAAK,EAAC,CAAC;iBACtB,CAAC;aACL,CAAC;YACF,OAAO,EAAC,IAAI;SACK,CAAC,CAAC;QAEvB,qBAAgB,GAAc,IAAI,sDAAS,CAAC;YACxC,KAAK,EAAE,qBAAqB;YAC5B,oBAAoB;YACpB,OAAO,EAAE,IAAI;YACb,OAAO,EAAE,GAAG;YACZ,MAAM,EAAE,IAAI,iDAAO,CAAC;gBAChB,GAAG,EAAE,4CAA4C;gBACjD,MAAM,EAAE;oBACJ,QAAQ,EAAE,qBAAqB;oBAC/B,aAAa,EAAE,MAAM;oBACrB,OAAO,EAAE,GAAG;oBACZ,QAAQ,EAAE,GAAG;iBAChB;aACJ,CAAC;SACe,CAAC;QACtB,YAAO,GAAQ,IAAI,sDAAU,CAAC;YAC1B,KAAK,EAAE,SAAS;YAChB,IAAI,EAAE,MAAM;YACZ,MAAM,EAAE;gBACJ,IAAI,sDAAS,CAAC;oBACV,KAAK,EAAE,qBAAqB;oBAC5B,oBAAoB;oBACpB,OAAO,EAAE,KAAK;oBACd,OAAO,EAAE,IAAI;oBACb,MAAM,EAAE,IAAI,iDAAO,CAAC;wBAChB,GAAG,EAAE,4CAA4C;wBACjD,MAAM,EAAE;4BACJ,QAAQ,EAAE,kBAAkB;4BAC5B,aAAa,EAAE,MAAM;4BACrB,OAAO,EAAE,GAAG;4BACZ,QAAQ,EAAE,GAAG;yBAChB;qBACJ,CAAC;iBACe,CAAC;gBACtB,IAAI,sDAAS,CAAC;oBACV,KAAK,EAAE,sBAAsB;oBAC7B,oBAAoB;oBACpB,OAAO,EAAE,IAAI;oBACb,MAAM,EAAE,IAAI,iDAAO,CAAC;wBAChB,GAAG,EAAE,4CAA4C;wBACjD,MAAM,EAAE;4BACJ,QAAQ,EAAE,eAAe;4BACzB,aAAa,EAAE,MAAM;4BACrB,OAAO,EAAE,GAAG;4BACZ,QAAQ,EAAE,GAAG;yBAChB;qBACJ,CAAC;iBACe,CAAC;gBACtB,IAAI,sDAAS,CAAC;oBACV,KAAK,EAAE,YAAY;oBACnB,oBAAoB;oBACpB,OAAO,EAAE,IAAI;oBACb,OAAO,EAAE,GAAG;oBACZ,MAAM,EAAE,IAAI,iDAAO,CAAC;wBAChB,GAAG,EAAE,4CAA4C;wBACjD,MAAM,EAAE;4BACJ,QAAQ,EAAE,qBAAqB;4BAC/B,aAAa,EAAE,MAAM;4BACrB,OAAO,EAAE,GAAG;4BACZ,QAAQ,EAAE,GAAG;yBAChB;qBACJ,CAAC;iBACe,CAAC;gBACtB,IAAI,CAAC,gBAAgB;gBACrB,IAAI,+CAAW,CAAC,EAEf,CAAC;gBACF,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,UAAU,EAAE,EAAE,EAAE,KAAK,CAAC;gBACzC,IAAI,CAAC,gBAAgB;aACxB;SACiB,CAAC,CAAC;QACxB,kBAAa,GAAQ,IAAI,wDAAa,CAAC;YACnC,QAAQ,EAAE,gBAAgB;YAC1B,OAAO,EAAE,IAAI;YACb,gBAAgB,EAAE,OAAO;SAC5B,CAAC,CAAC;QAIH,aAAQ,GAAS,KAAK,CAAC;QAYvB,aAAQ,GAAS,IAAI,+CAAI,CAAC;YACtB,MAAM,EAAE,CAAC,CAAC,SAAS,EAAE,UAAU,CAAC;YAChC,IAAI,EAAE,IAAI;SACb,CAAC,CAAC;IAvS4C,CAAC;IA8RhD,QAAQ;QACJ,IAAI,CAAC,GAAG;IACZ,CAAC;IACD,SAAS,CAAC,GAAG;QACT,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;IACrB,CAAC;IAKD,QAAQ;QACJ,IAAI,CAAC,GAAG,GAAG,IAAI,+CAAK,CAAC;YACjB,IAAI,EAAE,IAAI,CAAC,QAAQ;YACnB,QAAQ,EAAE,2DAAQ,CAAC;gBACf,WAAW,EAAE,KAAK,EAAE,kBAAkB,EAAE;oBACpC,MAAM,EAAE,GAAG,EAAE,CAAC,KAAK;iBACtB;aACJ,CAAC,CAAC,MAAM,CAAC;gBACN,IAAI,CAAC,aAAa;gBAClB,IAAI,oDAAS,CAAC;oBACV,GAAG,EAAE,IAAI;oBACT,QAAQ,EAAE,GAAG;oBACb,KAAK,EAAE,CAAC,EAAE,IAAI,EAAE,IAAI;iBACvB,CAAC;gBACF,IAAI,sDAAW,CAAC;oBACZ,MAAM,EAAE,CAAC,IAAI,CAAC,gBAAgB,CAAC;iBAClC,CAAC;gBACF,IAAI,qDAAU,CAAC,EAEd,CAAC,EAAE,IAAI,iDAAM,CAAC;oBACX,QAAQ,EAAE,GAAG;iBAChB,CAAC;gBACF,IAAI,sDAAW,CAAC,EAAE,CAAC,EAAE,IAAI,wDAAa,CAAC,EAAE,CAAC;aAC7C,CAAC;YACF,MAAM,EAAE;gBACJ,IAAI,CAAC,QAAQ;gBACb,IAAI,CAAC,OAAO;aACf;YACD,MAAM,EAAE,QAAQ;SACnB,CAAC,CAAC;QACH,IAAI,QAAQ,GAAO,IAAI,CAAC,GAAG,CAAC;QAC5B,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,aAAa,EAAE,UAAU,GAA6B;YAC9D,OAAO,CAAC,GAAG,CAAC,QAAQ,CAAC,OAAO,EAAE,CAAC,SAAS,EAAE,CAAC,CAAC;QAChD,CAAC,CAAC,CAAC;QACH,IAAI,CAAC,iBAAiB,EAAE,CAAC;QACzB,IAAI,CAAC,WAAW,EAAE,CAAC;IACvB,CAAC;IACD,iBAAiB;QACb,IAAI,CAAC,OAAO,CAAC,eAAe,CAAC,0BAA0B,CAAC,CAAC,IAAI,CAAC,gEAAS,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,SAAS,CAAC,CAAC,IAAS,EAAE,EAAE;YAC5G,IAAI,WAAW,GAAG,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC,QAAgB,EAAE,OAAY,EAAE,EAAE;gBACtE,IAAI,QAAQ,GAAG,0DAAM,CAAC,OAAO,EAAE,EAAE,KAAK,EAAE,QAAQ,EAAE,CAAC,CAAC;gBACpD,IAAI,KAAK,GAAG,QAAQ,GAAG,QAAQ,CAAC;gBAChC,IAAI,CAAC,eAAe,GAAG,KAAK,CAAC,QAAQ,EAAE,CAAC;gBACxC,OAAO,KAAK,CAAC;YACjB,CAAC,EAAE,CAAC,CAAC,CAAC;YACN,IAAI,CAAC,eAAe,GAAG,kEAAgB,CAAC,IAAI,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC,CAAC;YAChE,mCAAmC;QACvC,CAAC,CAAC,CAAC;QACH,IAAI,CAAC,OAAO,CAAC,eAAe,CAAC,0BAA0B,CAAC,CAAC,IAAI,CAAC,gEAAS,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,SAAS,CAAC,CAAC,IAAS,EAAE,EAAE;YAC5G,IAAI,WAAW,GAAG,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC,QAAgB,EAAE,OAAY,EAAE,EAAE;gBACtE,IAAI,QAAQ,GAAG,0DAAM,CAAC,OAAO,EAAE,EAAE,KAAK,EAAE,QAAQ,EAAE,CAAC,CAAC;gBACpD,IAAI,KAAK,GAAG,QAAQ,GAAG,QAAQ,CAAC;gBAChC,OAAO,KAAK,CAAC;YACjB,CAAC,EAAE,CAAC,CAAC,CAAC;YACN,IAAI,CAAC,eAAe,GAAG,kEAAgB,CAAC,IAAI,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC,CAAC;YAChE,mCAAmC;QACvC,CAAC,CAAC,CAAC;QACH,IAAI,CAAC,OAAO,CAAC,eAAe,CAAC,wBAAwB,CAAC,CAAC,IAAI,CAAC,gEAAS,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,SAAS,CAAC,CAAC,IAAS,EAAE,EAAE;YAC1G,IAAI,WAAW,GAAG,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC,QAAgB,EAAE,OAAY,EAAE,EAAE;gBACtE,IAAI,QAAQ,GAAG,0DAAM,CAAC,OAAO,EAAE,EAAE,KAAK,EAAE,QAAQ,EAAE,CAAC,CAAC;gBACpD,IAAI,KAAK,GAAG,QAAQ,GAAG,QAAQ,CAAC;gBAChC,OAAO,KAAK,CAAC;YACjB,CAAC,EAAE,CAAC,CAAC,CAAC;YACN,IAAI,CAAC,cAAc,GAAG,kEAAgB,CAAC,IAAI,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC,CAAC;YAC/D,mCAAmC;QACvC,CAAC,CAAC,CAAC;QACH,IAAI,CAAC,OAAO,CAAC,eAAe,CAAC,qBAAqB,CAAC,CAAC,IAAI,CAAC,gEAAS,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,SAAS,CAAC,CAAC,IAAS,EAAE,EAAE;YACvG,IAAI,WAAW,GAAG,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC,QAAgB,EAAE,OAAY,EAAE,EAAE;gBACtE,IAAI,QAAQ,GAAG,0DAAM,CAAC,OAAO,EAAE,EAAE,KAAK,EAAE,QAAQ,EAAE,CAAC,CAAC;gBACpD,IAAI,KAAK,GAAG,QAAQ,GAAG,QAAQ,CAAC;gBAChC,OAAO,KAAK,CAAC;YACjB,CAAC,EAAE,CAAC,CAAC,CAAC;YACN,IAAI,CAAC,WAAW,GAAG,kEAAgB,CAAC,IAAI,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC,CAAC;YAC5D,mCAAmC;QACvC,CAAC,CAAC,CAAC;QACH,IAAI,CAAC,OAAO,CAAC,eAAe,CAAC,eAAe,CAAC,CAAC,IAAI,CAAC,gEAAS,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,SAAS,CAAC,CAAC,IAAS,EAAE,EAAE;YACjG,IAAI,IAAI,GAAG,kEAAgB,CAAC,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC,CAAM,EAAE,EAAE,CAAC,CAAC,CAAC,UAAU,CAAC,IAAI,IAAI,MAAM,CAAC,CAAC,MAAM,CAAC,CAAC,CAAS,EAAE,CAAM,EAAE,EAAE;gBACnH,OAAO,CAAC,GAAG,0DAAM,CAAC,CAAC,EAAE,EAAE,KAAK,EAAE,QAAQ,EAAE,CAAC,CAAC;YAC9C,CAAC,EAAE,CAAC,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC;YACjB,IAAI,GAAG,GAAG,kEAAgB,CAAC,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC,CAAM,EAAE,EAAE,CAAC,CAAC,CAAC,UAAU,CAAC,IAAI,IAAI,KAAK,CAAC,CAAC,MAAM,CAAC,CAAC,CAAS,EAAE,CAAM,EAAE,EAAE;gBACjH,OAAO,CAAC,GAAG,0DAAM,CAAC,CAAC,EAAE,EAAE,KAAK,EAAE,QAAQ,EAAE,CAAC,CAAC;YAC9C,CAAC,EAAE,CAAC,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC;YAClB,IAAI,CAAC,WAAW,GAAG,GAAG,CAAC;YACvB,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC;YACzB,IAAI,CAAC,oBAAoB,GAAG,IAAI,CAAC;QACrC,CAAC,CAAC,CAAC;QACH,IAAI,CAAC,OAAO,CAAC,eAAe,CAAC,SAAS,CAAC,CAAC,IAAI,CAAC,gEAAS,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,SAAS,CAAC,CAAC,IAAS,EAAE,EAAE;YAC3F,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC;YACrC,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC;QAC1B,CAAC,CAAC,CAAC;IACP,CAAC;IACD,WAAW;QACP,IAAI,CAAC,OAAO,CAAC,eAAe,CAAC,kBAAkB,CAAC,CAAC,IAAI,CAAC,gEAAS,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,SAAS,CAAC,CAAC,QAAa,EAAE,EAAE;YACxG,IAAI,CAAC,QAAQ,GAAG,QAAQ,CAAC,QAAQ,CAAC;YAClC,IAAI,CAAC,gBAAgB,GAAG,MAAM,CAAC,IAAI,CAAC,QAAQ,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,UAAU,CAAC,CAAC,MAAM,CAAC,CAAC,GAAE,EAAC,KAAG,MAAM,CAAC,CAAC;QAC/F,CAAC,CAAC,CAAC;IACP,CAAC;IAED,WAAW,CAAC,QAAgB;QACxB,IAAI,QAAQ,EAAE;YACV,IAAI,CAAC,GAAG,CAAC,OAAO,CAAC,IAAI,+CAAI,CAAC;gBACtB,MAAM,EAAE,CAAC,CAAC,SAAS,EAAE,UAAU,CAAC;gBAChC,IAAI,EAAE,KAAK;aACd,CAAC,CAAC,CAAC;YACJ,IAAI,CAAC,gBAAgB,CAAC,SAAS,CAAC,IAAI,gDAAY,CAAC,EAAG,CAAC,CAAC,CAAC;SAC1D;IACL,CAAC;IACD,kBAAkB,CAAC,WAAgB;QAC/B,IAAI,aAAa,GAAG;YAChB,MAAM,EAAE,SAAS;YACjB,UAAU,EAAE;gBACR,MAAM,EAAE,cAAc;gBACtB,aAAa,EAAE,WAAW,CAAC,GAAG,CAAC,CAAC,EAAO,EAAE,EAAE;oBACvC,OAAO,EAAE,CAAC,GAAG,CAAC,CAAC,CAAQ,EAAE,EAAE,CAAC,CAAC,CAAC,GAAG,CAAC,EAAE,CAAC,EAAE,CAAC,0DAAS,CAAC,EAAE,EAAE,WAAW,EAAE,WAAW,CAAC,CAAC,CAAC,CAAC;gBACtF,CAAC,CAAC;aACL;SACJ,CAAC;QACF,IAAI,OAAO,GAAG,CAAC,IAAI,kDAAO,EAAE,CAAC,CAAC,YAAY,CAAC,aAAa,CAAC,CAAC;QAC1D,IAAI,IAAI,GAAG,IAAI,gDAAY,CAAC,EAAE,QAAQ,EAAE,OAAO,EAAE,CAAC,CAAC;QACnD,IAAI,CAAC,gBAAgB,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC;QACtC,IAAI,KAAK,GAAG,CAAC,CAAC;QACd,IAAI,YAAY,GAAG,CAAC,KAAY,EAAE,EAAE,CAAC,IAAI,+CAAK,CAAC;YAC3C,MAAM,EAAE,IAAI,gDAAM,CAAC;gBACf,KAAK,EAAE,KAAK;gBACZ,KAAK;aACR,CAAC;SACL,CAAC,CAAC;QACH,IAAI,IAAI,GAAG,IAAI,CAAC,gBAAgB,CAAC,SAAS,EAAE,CAAC,SAAS,EAAE,CAAC;QACzD,IAAI,UAAU,GAAG,EAAE,CAAC;QAEpB,OAAO,CAAC,OAAO,CAAC,IAAI,GAAE;YAClB,mCAAmC;QACvC,CAAC,CAAC,CAAC;QACH,WAAW,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,OAAO,CAAC,EAAE;YAC7B,UAAU,GAAG,UAAU,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC;QAC5C,CAAC,CAAC,CAAC;QACH,UAAU,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC;QAC9B,IAAI,GAAG,GAAG;YACN,IAAI,CAAC,GAAG,CAAC,GAAG,UAAU,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;YACtC,IAAI,CAAC,GAAG,CAAC,GAAG,UAAU,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;YACtC,IAAI,CAAC,GAAG,CAAC,GAAG,UAAU,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;YACtC,IAAI,CAAC,GAAG,CAAC,GAAG,UAAU,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;SACzC,CAAC;QAEF,IAAI,IAAI,GAAG,GAAG,CAAC,CAAC,CAAC,CAAC;QAClB,IAAI,IAAI,GAAG,GAAG,CAAC,CAAC,CAAC,CAAC;QAClB,IAAI,IAAI,GAAG,GAAG,CAAC,CAAC,CAAC,CAAC;QAClB,IAAI,IAAI,GAAG,GAAG,CAAC,CAAC,CAAC,CAAC;QAClB,IAAI,CAAC,GAAG,CAAC,IAAI,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC;QAC1B,IAAI,CAAC,GAAG,CAAC,IAAI,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC;QAC1B,IAAI,UAAU,GAAG,IAAI,CAAC,GAAG,CAAC,IAAI,GAAG,IAAI,EAAE,IAAI,GAAG,IAAI,CAAC,GAAG,GAAG,CAAC;QAE1D,IAAI,cAAc,GAAG,0DAAS,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,WAAW,EAAE,WAAW,CAAC,CAAC;QACjE,IAAI,CAAC,GAAG,CAAC,OAAO,EAAE,CAAC,SAAS,CAAC,cAAc,CAAC,CAAC;QAC7C,IAAI,CAAC,GAAG,CAAC,OAAO,EAAE,CAAC,aAAa,CAAC,UAAU,CAAC,CAAC;QAC7C,IAAI,EAAE,GAAG,CAAC,CAAC;QACX,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,IAAI,EAAE,EAAE,CAAC,EAAE,EAAE;YAC1B,IAAI,CAAC,GAAG,EAAE,EAAE;gBACR,UAAU,CAAC,GAAG,EAAE;oBACZ,IAAI,CAAC,gBAAgB,CAAC,QAAQ,CAAC,YAAY,CAAC,4DAAU,EAAE,CAAC,CAAC,CAAC;gBAC/D,CAAC,EAAE,GAAG,GAAG,CAAC,CAAC;aACd;iBACI;gBACD,UAAU,CAAC,GAAG,EAAE;oBACZ,IAAI,CAAC,gBAAgB,CAAC,QAAQ,CAAC,YAAY,CAAC,KAAK,CAAC,CAAC,CAAC;gBACxD,CAAC,EAAE,GAAG,GAAG,CAAC,CAAC;aACd;SAEJ;QAED;;;;;;;;;;;;;;;;;;;;;;;kEAuB0D;QAC1D,yCAAyC;IAC7C,CAAC;IACD,WAAW;IACX,CAAC;;wEArfQ,YAAY;4FAAZ,YAAY;QCjCzB,wEAAyB;QACzB,qFAWkB;QAVlB,uMAA6B;QAU7B,4DAAkB;QAClB,yEACI;QAAA,yEACI;QAAA,gIAAkJ;QACtJ,4DAAM;QACN,yEACI;QAAA,qEAAmB;QACvB,4DAAM;QACN,yEACI;QAAA,gFAAmD;QAAvC,4LAAyB;QAAC,4DAAa;QACvD,4DAAM;QAEV,4DAAM;QAEN,yEACI;QAAA,iFACI;QAAA,8EACI;QAAA,4EAEI;QAyBA,6HACI;QAIJ,yGAAuD;QACvD,yGAA6D;QACjE,4DAAQ;QACZ,4DAAU;QACV,+EAA0C;QAAA,uEAAU;QAAA,4DAAU;QAC9D,+EAAoC;QAAA,uEAAU;QAAA,4DAAU;QACxD,+EAAqC;QAAA,uEAAU;QAAA,4DAAU;QAC7D,4DAAgB;QACpB,4DAAM;QAqBN,4EAA+B;;QAxF/B,0DAA6B;QAA7B,wFAA6B;QAaJ,0DAA6B;QAA7B,2FAA6B;QAMlC,0DAAyB;QAAzB,oFAAyB;QAQhB,0DAAuB;QAAvB,oFAAuB;QA2BD,0DAAoC;QAApC,yFAAoC;QAKpD,0DAAmC;QAAnC,iGAAmC;QAC1C,0DAAgD;QAAhD,kGAAgD;;6FD7B/D,YAAY;cALxB,uDAAS;eAAC;gBACP,QAAQ,EAAE,UAAU;gBACpB,WAAW,EAAE,sBAAsB;gBACnC,SAAS,EAAE,CAAC,qBAAqB,CAAC;aACrC;;;;;;;;;;;;;;AEhCD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA0D;AACjB;AACe;AAEA;AACT;AACI;AACS;AACA;AAEe;AACD;AACnB;AACE;AACe;AACO;;AAsBxE,MAAM,SAAS;;wFAAT,SAAS,cAFN,2DAAY;4IAEf,SAAS,mBAHP,EAAE,YARJ;YACL,qEAAgB;YAChB,uEAAa;YACb,oEAAgB;YAChB,qEAAa,EAAE,uEAAc;YAC7B,6FAAuB;YACvB,sFAAqB;SACxB;mIAIQ,SAAS,mBAlBd,2DAAY;QACZ,+DAAY;QACZ,wEAAe;QACf,wEAAe;QACf,uFAAoB;QACpB,sFAAmB,aAGnB,qEAAgB;QAChB,uEAAa;QACb,oEAAgB;QAChB,qEAAa,EAAE,uEAAc;QAC7B,6FAAuB;QACvB,sFAAqB;6FAKhB,SAAS;cApBrB,sDAAQ;eAAC;gBACN,YAAY,EAAE;oBACV,2DAAY;oBACZ,+DAAY;oBACZ,wEAAe;oBACf,wEAAe;oBACf,uFAAoB;oBACpB,sFAAmB;iBACtB;gBACD,OAAO,EAAE;oBACL,qEAAgB;oBAChB,uEAAa;oBACb,oEAAgB;oBAChB,qEAAa,EAAE,uEAAc;oBAC7B,6FAAuB;oBACvB,sFAAqB;iBACxB;gBACD,SAAS,EAAE,EAAE;gBACb,SAAS,EAAE,CAAC,2DAAY,CAAC;aAC5B;;;;;;;;;;;;;;ACpCD;AAAA;AAAA;AAAA;AAAA;AAAyD;AACG;;;;;ICUhD,sEACJ;;;IADwD,2EAAkB;;;IAD1E,8DACI;IADJ,0EACI;IAAA,oIACJ;IAAA,4DAAM;;;IADI,0DAA6C;IAA7C,qFAA6C;;;;IAGnD,sEACA;;;IAD+D,+EAAsB;;;;IACrF,2EAA4M;IAAA,uDAAmB;IAAA,4DAAO;;;IAA1K,+EAAsB;IAA0H,0DAAmB;IAAnB,oFAAmB;;;IAFnO,8DACI;IADJ,0EACI;IAAA,oIACA;IAAA,oIAA4M;IAChN,4DAAM;;;IAFI,0DAAwD;IAAxD,4FAAwD;IACxD,0DAAqD;IAArD,yFAAqD;;;IAPnE,yEACI;IAAA,oEAAG;IAAA,iGAAiC;IAAA,4DAAI;IACxC,sHACI;IAEJ,sHACI;IAGJ,wEAA2G;IAC3G,wEAA2G;IAC/G,4DAAM;;;IAT2D,0DAAgB;IAAhB,kFAAgB;IAGf,0DAAuB;IAAvB,yFAAuB;;;IAOzF,0EACI;IAAA,oEAAG;IAAA,6FAA6B;IAAA,4DAAI;IACpC,8DACM;IADN,qEACM;IACN,qEACM;IACV,4DAAM;;ADlBH,MAAM,eAAe;IAExB;QAEA,iBAAY,GAAQ,CAAC,CAAC;QACtB,aAAQ,GAAO,EAAE,CAAC;QAClB,oBAAe,GAAO,EAAE,CAAC;QACzB,iBAAY,GAAO,EAAE,CAAC;QAEtB,gBAAW,GAAU,CAAC,CAAC;IAPP,CAAC;IASjB,QAAQ;QACJ,IAAI,OAAO,GAAC,WAAW,CAAC,GAAG,EAAE;YACzB,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;YAC5B,IAAI,IAAI,CAAC,SAAS,CAAC,MAAM,KAAK,CAAC,EAAE;gBAC7B,aAAa,CAAC,OAAO,CAAC,CAAC;gBACvB,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;aAC5B;QACL,CAAC,EAAE,IAAI,CAAC,CAAC;QACT,yFAAyF;IAC7F,CAAC;IAED,SAAS;QACL,uDAAuD;QACvD,IAAI,CAAC,WAAW,EAAE,CAAC;QACnB,IAAI,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC,YAAY,EAAE;YACtC,IAAI,CAAC,WAAW,GAAG,CAAC,CAAC;SACxB;IACL,CAAC;IACD,SAAS;QACL,uDAAuD;QACvD,IAAI,CAAC,WAAW,EAAE,CAAC;QACnB,IAAI,IAAI,CAAC,WAAW,IAAI,CAAC,EAAE;YACvB,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC,YAAY,CAAC;SACxC;IACL,CAAC;IACD,GAAG,CAAC,IAAS;QACT,IAAI,UAAU,GAAG,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,CAAC,CAAM,EAAE,EAAE,CAAC,CAAC,CAAC,UAAU,CAAC,CAAC;QAC7D,IAAI,GAAG,GAAQ,IAAI,GAAG,CAAC,UAAU,CAAC,GAAG,CAAC,CAAC,EAAE,UAAU,EAAE,EAAE,EAAE,CAAC,CAAC,UAAU,EAAE,EAAE,IAAI,EAAE,UAAU,EAAE,OAAO,EAAE,CAAC,EAAE,KAAK,EAAE,2DAAU,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC;QAChI,KAAK,IAAI,EAAE,UAAU,EAAE,IAAI,UAAU;YAAE,GAAG,CAAC,GAAG,CAAC,UAAU,CAAC,CAAC,OAAO,IAAI,CAAC,CAAC;QACxE,IAAI,MAAM,GAAG,KAAK,CAAC,IAAI,CAAC,GAAG,CAAC,MAAM,EAAE,CAAC,CAAC;QACtC,IAAI,GAAG,GAAG,MAAM,CAAC,GAAG,CAAC,CAAC,GAAQ,EAAE,EAAE,CAAC,iCAAM,GAAG,KAAE,OAAO,EAAE,CAAC,GAAG,CAAC,OAAO,GAAG,GAAG,GAAG,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,IAAG,CAAC,CAAC;QACjH,IAAI,CAAC,QAAQ,CAAC,GAAG,EAAC,CAAC,EAAC,EAAE,EAAC,EAAE,EAAC,IAAI,CAAC,CAAC;IACpC,CAAC;IACD,QAAQ,CAAC,MAAW,EAAE,CAAS,EAAE,QAAa,EAAE,cAAmB,EAAE,cAAmB;QACpF,IAAI,KAAK,GAAG,GAAG,CAAC;QAChB,IAAI,WAAW,GAAG,EAAE,CAAC;QACrB;;;;;;;;;;;;;;YAcI;QACJ;;;sCAG8B;QAC9B,+BAA+B;QAC/B;;;;;;;;;;;;;YAaI;QACJ,+DAA+D;QAC/D,MAAM,CAAC,IAAI,CAAC,CAAC,CAAuB,EAAE,CAAuB,EAAE,EAAE,CAAC,CAAC,CAAC,OAAO,GAAG,CAAC,CAAC,OAAO,CAAC;aACnF,OAAO,CAAC,CAAC,KAAwD,EAAE,CAAS,EAAE,EAAE;YAC7E,IAAI,KAAK,GAAG,KAAK,CAAC,OAAO,GAAG,GAAG,CAAC;YAChC,IAAI,IAAI,GAAG,uDAAM,CAAC,CAAC,EAAE,CAAC,WAAW,GAAG,KAAK,GAAG,CAAC,CAAC,CAAC,CAAC;YAChD,IAAI,IAAI,GAAG,uDAAM,CAAC,KAAK,EAAE,WAAW,EAAE,IAAI,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC,CAAC,CAAC;YACtD,IAAI,IAAI,GAAG,uDAAM,CAAC,KAAK,EAAE,WAAW,GAAG,KAAK,EAAE,IAAI,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC,CAAC,CAAC;YAC9D,IAAI,EAAE,GAAG,IAAI,CAAC,CAAC,GAAG,IAAI,CAAC,CAAC,CAAC;YAAC,IAAI,EAAE,GAAG,IAAI,CAAC,CAAC,GAAG,IAAI,CAAC,CAAC,CAAC;YACnD,IAAI,EAAE,GAAG,IAAI,CAAC,CAAC,GAAG,IAAI,CAAC,CAAC,CAAC;YAAC,IAAI,EAAE,GAAG,IAAI,CAAC,CAAC,GAAG,IAAI,CAAC,CAAC,CAAC;YACnD,IAAI,KAAK,GAAG,GAAG,KAAK,CAAC,IAAI,KAAK,KAAK,CAAC,OAAO,KAAK,CAAC;YACjD,IAAI,EAAE,GAAG,IAAI,EAAE,GAAG,GAAG,GAAG,EAAE,IAAI,IAAI,CAAC,CAAC,IAAI,EAAE,GAAG,GAAG,GAAG,EAAE,IAAI,KAAK,IAAI,KAAK,MAAM,KAAK,CAAC,OAAO,IAAI,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,MAAM,EAAE,GAAG,GAAG,GAAG,EAAE,EAAE,CAAC;YAC9H,IAAI,EAAE,GAAG,IAAI,IAAI,CAAC,CAAC,IAAI,IAAI,CAAC,CAAC,IAAI,IAAI,CAAC,CAAC,IAAI,KAAK,IAAI,KAAK,MAAM,KAAK,CAAC,OAAO,IAAI,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,MAAM,IAAI,CAAC,CAAC,EAAE,CAAC;YACzG,IAAI,CAAC,GAAG,EAAE,EAAE,CAAC,GAAG,EAAE,EAAE,CAAC,GAAG,EAAE,EAAE,EAAE,GAAG,EAAE,CAAC;YACpC,IAAI,CAAC,GAAG,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC;YACnB,IAAI,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;YACxB;;;;;;;;;;;;;;;;;;;gBAmBI;YACJ,gBAAgB;YAChB,IAAI,QAAY,CAAC;YACjB,IAAI,MAAM,CAAC,MAAM,IAAI,CAAC,EAAE;gBACpB,QAAQ,GAAG,EAAE,CAAC,EAAE,KAAK,EAAE,MAAM,EAAE,KAAK,EAAE,IAAI,EAAE,KAAK,CAAC,KAAK,EAAE,KAAK,EAAE,iBAAiB,EAAE,KAAK,EAAE,CAAC;aAC9F;iBAAM;gBACH,QAAQ,GAAG,EAAE,CAAC,EAAE,EAAE,EAAE,MAAM,EAAE,KAAK,EAAE,IAAI,EAAE,KAAK,CAAC,KAAK,EAAE,KAAK,EAAE,iBAAiB,EAAE,KAAK,EAAE,CAAC;aAC3F;YACD,KAAK,CAAC,QAAQ,EAAE,MAAM,EAAE,aAAa,CAAC,CAAC;YACvC,IAAI,aAAa,GAAG,EAAE,CAAC,EAAE,IAAI,EAAE,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC,QAAQ,CAAC,CAAC,GAAG,EAAE,MAAM,EAAE,KAAK,EAAE,IAAI,EAAE,KAAK,CAAC,KAAK,EAAE,KAAK,EAAE,iBAAiB,EAAE,CAAC;YAC9I,IAAI,WAAW,GAAG,EAAE,CAAC,EAAE,CAAC,EAAE,IAAI,EAAE,OAAO,EAAE,MAAM,EAAE,OAAO,EAAE,KAAK,EAAE,mCAAmC,EAAC,KAAK,EAAE,CAAC;YAC7G,KAAK,CAAC,aAAa,EAAE,MAAM,EAAE,cAAc,CAAC,CAAC,CAAC,CAAC,CAAC;YAChD,KAAK,CAAC,WAAW,EAAE,MAAM,EAAE,cAAc,CAAC,CAAC,CAAC,EAAE,KAAK,CAAC,CAAC;YACrD,WAAW,IAAI,KAAK,CAAC;YACrB,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;YAC7B,IAAI,CAAC,eAAe,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC;YACzC,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;QACxC,CAAC,CAAC,CAAC;QACP;;+DAEuD;IAC3D,CAAC;;8EAxIQ,eAAe;+FAAf,eAAe;QCR5B,yEACI;QAAA,4EACI;QADwD,uIAAS,eAAW,IAAC;QAC7E,kEAAiC;QACrC,4DAAS;QACT,4EACI;QADkE,uIAAS,eAAW,IAAC;QACvF,kEAAkC;QACtC,4DAAS;QACT,gEACA;QAAA,2GACI;QAWJ,2GACI;QAeR,4DAAM;;QA5BkC,0DAAsB;QAAtB,sFAAsB;QAYtB,0DAAsB;QAAtB,sFAAsB;;6FDZjD,eAAe;cAL3B,uDAAS;eAAC;gBACP,QAAQ,EAAE,YAAY;gBACtB,WAAW,EAAE,yBAAyB;gBACtC,SAAS,EAAE,CAAC,wBAAwB,CAAC;aACxC;;kBAII,mDAAK;;AAuIV,SAAS,KAAK,CAAC,GAAG,KAAS;AAE3B,CAAC;;;;;;;;;;;;;AEpJD;AAAA;AAAA;AAAyD;;AAOlD,MAAM,oBAAoB;IAG7B;IAAgB,CAAC;IACjB,UAAU;QACN,OAAO,CAAC,GAAG,CAAC,YAAY,CAAC,CAAC;IAC9B,CAAC;IAYD,UAAU;QACN,OAAO,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC;IAC1B,CAAC;IACD,QAAQ;IACR,CAAC;;wFAtBQ,oBAAoB;oGAApB,oBAAoB;QCPjC,yEACI;QAAA,oEAA4B;QAC5B,yEACI;QAAA,yEACI;QAAA,uEAAmB;QAAA,+EAAoB;QAAA,4DAAI;QAC3C,yEACI;QAAA,8DACI;QADJ,yEACI;QAAA,qEACJ;QAAA,4DAAM;QACN,+DACA;QADA,gEACA;QAAA,wEAAmF;QAAA,wDAAoB;QAAA,4DAAI;QAC/G,4DAAM;QACV,4DAAM;QACV,4DAAM;QACN,0EACI;QAAA,0EACI;QAAA,wEAAgB;QAAA,wEAAY;QAAA,4DAAI;QAChC,2EAAkB;QAAA,8DACV;QADU,0EACV;QAAA,uEACJ;QAAA,4DAAM;QACN,+DACA;QADA,iEACA;QAAA,yEAAgF;QAAA,wDAAiB;QAAA,4DAAI;QACzG,4DAAM;QACV,4DAAM;QACV,4DAAM;QACN,0EACI;QAAA,0EACI;QAAA,wEAAgB;QAAA,yEAAa;QAAA,4DAAI;QACjC,2EAAkB;QAAA,8DACV;QADU,0EACV;QAAA,uEACJ;QAAA,4DAAM;QACN,+DACA;QADA,iEACA;QAAA,yEAAiF;QAAA,wDAAkB;QAAA,4DAAI;QAC3G,4DAAM;QACV,4DAAM;QACV,4DAAM;QACN,0EACI;QAAA,0EAEI;QAAA,yEAAgB;QAAA,4FAA2B;QAAA,4DAAI;QAC/C,2EAAkB;QAAA,8DACV;QADU,0EACV;QAAA,uEACJ;QAAA,4DAAM;QACN,+DACA;QADA,iEACA;QAAA,yEAAiF;QAAA,wDAAqB;QAAA,4DAAI;QAC9G,4DAAM;QACV,4DAAM;QAEV,4DAAM;QACN,0EACI;QAAA,0EAEI;QAAA,yEAAgB;QAAA,6FAA4B;QAAA,4DAAI;QAChD,2EAAkB;QAAA,8DACV;QADU,0EACV;QAAA,uEACJ;QAAA,4DAAM;QACN,+DACA;QADA,iEACA;QAAA,yEAAkF;QAAA,wDAAqB;QAAA,4DAAI;QAC/G,4DAAM;QACV,4DAAM;QACV,4DAAM;QACN,qEAA4B;QAEhC,4DAAM;QACN,0EACI;QAAA,sEAA4B;QAE5B,0EACI;QAAA,0EACI;QAAA,yEAAgB;QAAA,oFAAmB;QAAA,4DAAI;QACvC,2EAAkB;QAAA,8DACV;QADU,0EACV;QAAA,uEACJ;QAAA,4DAAM;QACN,+DACA;QADA,iEACA;QAAA,yEAAqF;QAAA,wDAAiB;QAAA,4DAAI;QAC9G,4DAAM;QACV,4DAAM;QACV,4DAAM;QAEN,0EACI;QAAA,0EACI;QAAA,yEAAgB;QAAA,0EAAc;QAAA,4DAAI;QAAA,iEAClC;QAAA,2EACA;QAD8B,0IAAS,gBAAY,IAAC;QAApD,4DACA;QAAA,iEACA;QAAA,yEAAmF;QAAA,wDAAY;QAAA,4DAAI;QACvG,4DAAM;QACV,4DAAM;QACN,sEAA4B;QAEhC,4DAAM;;QA/E6F,2DAAoB;QAApB,8FAAoB;QAWvB,2DAAiB;QAAjB,2FAAiB;QAWhB,2DAAkB;QAAlB,4FAAkB;QAYlB,2DAAqB;QAArB,+FAAqB;QAapB,2DAAqB;QAArB,+FAAqB;QAiBlB,2DAAiB;QAAjB,2FAAiB;QAUvB,0DAAY;QAAZ,6EAAY;;6FD7E9F,oBAAoB;cALhC,uDAAS;eAAC;gBACP,QAAQ,EAAE,iBAAiB;gBAC3B,WAAW,EAAE,8BAA8B;gBAC3C,SAAS,EAAE,CAAC,6BAA6B,CAAC;aAC7C;;kBAUI,mDAAK;;kBACL,mDAAK;;kBACL,mDAAK;;kBACL,mDAAK;;kBAEL,mDAAK;;kBACL,mDAAK;;kBACL,mDAAK;;;;;;;;;;;;;;AEvBV;AAAA;AAAA;AAAyD;;AASlD,MAAM,YAAY;IACrB;IAAgB,CAAC;IAIjB,QAAQ;QAEJ,2CAA2C;QAC3C,sCAAsC;IAC1C,CAAC;;wEATQ,YAAY;4FAAZ,YAAY;QCTzB,oEACM;QACN,yEACI;QAAA,kEAA0D;QAC1D,uEAAkD;QAClD,oEAA8B;QAClC,4DAAM;QACN,oEAAqB;;6FDER,YAAY;cALxB,uDAAS;eAAC;gBACP,QAAQ,EAAE,SAAS;gBACnB,WAAW,EAAE,sBAAsB;gBACnC,SAAS,EAAE,CAAC,qBAAqB,CAAC;aACrC;;kBAKI,mDAAK;;;;;;;;;;;;;;AEbV;AAAA;AAAA;AAAkD;;AAO3C,MAAM,eAAe;IAE1B;IAAgB,CAAC;IAEjB,QAAQ;IACR,CAAC;;8EALU,eAAe;+FAAf,eAAe;QCP5B,yEACI;QAAA,yEACI;QAAA,4EAAwB;QAAA,kEAA2B;QAAA,4DAAS;QAC5D,yEACI;QAAA,uEAA4B;QAAA,8EAAmB;QAAA,4DAAI;QACnD,uEAA2B;QAAA,6EAAkB;QAAA,4DAAI;QACjD,uEAAgB;QAAA,gEAAI;QAAA,4DAAI;QAC5B,4DAAM;QACV,4DAAM;QAKN,0EACI;QAAA,yEACI;QAAA,0EACI;QAAA,yEACI;QAAA,iFACA;QAAA,4EAAsB;QAAA,qEAAS;QAAA,4DAAO;QAC1C,4DAAI;QACR,4DAAK;QACT,4DAAK;QACL,2EACI;QAAA,8EAAoD;QAAA,oEAAQ;QAAA,4DAAS;QACrE,2EACI;QAAA,8EAAiE;QAAA,wEAAY;QAAA,4DAAS;QACtF,sEAAoC;QACpC,8EAAiE;QAAA,wEAAY;QAAA,4DAAS;QAC1F,4DAAM;QAEV,4DAAM;QACN,8EACI;QAAA,8EAAmB;QAAA,0EAAc;QAAA,4DAAS;QAC1C,8EAA4B;QAAA,sEAAU;QAAA,4DAAS;QAC/C,8EAAmB;QAAA,8DAAE;QAAA,4DAAS;QAC9B,8EAAmB;QAAA,8DAAE;QAAA,4DAAS;QAC9B,8EAAmB;QAAA,8DAAE;QAAA,4DAAS;QAC9B,8EAA4B;QAAA,8DAAE;QAAA,4DAAS;QACvC,8EAAmB;QAAA,uEAAW;QAAA,4DAAS;QAC3C,4DAAS;QACT,8EACI;QAAA,8EAAqB;QAAA,mEAAO;QAAA,4DAAS;QACrC,8EAAuB;QAAA,kEAAM;QAAA,4DAAS;QACtC,8EAAqB;QAAA,mEAAO;QAAA,4DAAS;QACzC,4DAAS;QACb,4DAAM;QACV,4DAAM;;6FDvCO,eAAe;cAL3B,uDAAS;eAAC;gBACT,QAAQ,EAAE,YAAY;gBACtB,WAAW,EAAE,yBAAyB;gBACtC,SAAS,EAAE,CAAC,wBAAwB,CAAC;aACtC;;;;;;;;;;;;;;AEND;AAAA;AAAA;AAAA;AAA+E;;;;;ICI/E,sEACI;IAAA,yEACI;IADkD,wXAAwC;IAC1F,oEAAG;IAAA,uDAAiC;IAAA,4DAAI;IAC5C,4DAAM;IACV,4DAAM;;;IAFK,0DAAiC;IAAjC,kGAAiC;;ADOrC,MAAM,mBAAmB;IAC5B;QAEU,kBAAa,GAAG,IAAI,0DAAY,EAAO,CAAC;QACxC,YAAO,GAAG,IAAI,0DAAY,EAAW,CAAC;QAChD,aAAQ,GAAW,EAAE,CAAC;IAJN,CAAC;IAMjB,cAAc,CAAC,KAAU,EAAE,GAAG;QAC1B,IAAI,aAAa,GAAG,KAAK,CAAC,MAAM,CAAC,QAAQ,IAAI,KAAK,CAAC,CAAC,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC,CAAC,KAAK,CAAC,MAAM,CAAC,aAAa,CAAC;QAC/F,8BAA8B;QAC9B,0EAA0E;QAC1E,oEAAoE;QACpE,IAAI,CAAC,QAAQ,GAAG,GAAG,CAAC,UAAU,CAAC,UAAU,CAAC;QAC1C,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,GAAG,CAAC,QAAQ,CAAC,WAAW,CAAC,CAAC;QAClD,QAAQ,CAAC,gBAAgB,CAAC,sBAAsB,CAAC,CAAC,OAAO,CACrD,CAAC,CAAC,EAAE;YACA,IAAI,CAAC,CAAC,CAAC,SAAS,CAAC,QAAQ,CAAC,IAAI,CAAC,QAAQ,CAAC,EAAE;gBACtC,CAAC,CAAC,SAAS,CAAC,MAAM,CAAC,qBAAqB,CAAC;aAC5C;QACL,CAAC,CACJ,CAAC;QACF,IAAI,QAAQ,GAAG,aAAa,CAAC,SAAS,CAAC,QAAQ,CAAC,qBAAqB,CAAC,CAAC;QAEvE,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;QAC5B,aAAa,CAAC,SAAS,CAAC,MAAM,CAAC,qBAAqB,CAAC,CAAC;IAC1D,CAAC;IACD,QAAQ;IACR,CAAC;;sFA3BQ,mBAAmB;mGAAnB,mBAAmB;QCbhC,yEAA0B;QAAA,8EAAmB;QAAA,4DAAM;QAInD,+GACI;;QADC,0DAA+C;QAA/C,iFAA+C;;6FDSvC,mBAAmB;cAL/B,uDAAS;eAAC;gBACP,QAAQ,EAAE,iBAAiB;gBAC3B,WAAW,EAAE,8BAA8B;gBAC3C,SAAS,EAAE,CAAC,6BAA6B,CAAC;aAC7C;;kBAGI,mDAAK;;kBACL,oDAAM;;kBACN,oDAAM;;;;;;;;;;;;;;AEjBX;AAAA;AAAA,gFAAgF;AAChF,0EAA0E;AAC1E,gEAAgE;AAEzD,MAAM,WAAW,GAAG;IACzB,UAAU,EAAE,KAAK;CAClB,CAAC;AAEF;;;;;;GAMG;AACH,mEAAmE;;;;;;;;;;;;;ACfnE;AAAA;AAAA;AAAA;AAAA;AAAO,SAAS,UAAU;IACtB,IAAI,CAAC,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,MAAM,EAAE,GAAG,GAAG,CAAC,CAAC;IACxC,IAAI,CAAC,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,MAAM,EAAE,GAAG,GAAG,CAAC,CAAC;IACxC,IAAI,CAAC,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,MAAM,EAAE,GAAG,GAAG,CAAC,CAAC;IACxC,OAAO,OAAO,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG;AAChC,CAAC;AACM,SAAS,gBAAgB,CAAC,MAAc;IAC3C,MAAM,IAAI,GAAG,MAAM,CAAC,QAAQ,EAAE,CAAC,KAAK,CAAC,EAAE,CAAC,CAAC,OAAO,EAAE,CAAC;IACnD,MAAM,OAAO,GAAG,CAAC,CAAS,EAAE,CAAS,EAAE,CAAS,EAAE,EAAE,CAAC,CAAC,GAAG,CAAC,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,EAAE,CAAC;IAClG,OAAO,IAAI,CAAC,MAAM,CAAC,OAAO,EAAE,EAAE,CAAC,CAAC;AACpC,CAAC;AAEM,SAAS,MAAM,CAAC,KAAY,EAAE,KAAY,EAAE,EAAE,GAAG,CAAC,EAAE,EAAE,GAAG,CAAC;IAC7D,IAAI,CAAC,GAAG,KAAK,GAAG,IAAI,CAAC,GAAG,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC,GAAG,EAAE,CAAC;IAC9C,IAAI,CAAC,GAAG,KAAK,GAAG,IAAI,CAAC,GAAG,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC,GAAG,EAAE,CAAC;IAC9C,OAAO,EAAE,GAAG,EAAE,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,GAAG,GAAG,GAAG,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC;AAC5D,CAAC;AACM,SAAS,OAAO,CAAC,GAAU;IAC9B,OAAO,GAAG,GAAG,IAAI,CAAC,EAAE,GAAG,GAAG,CAAC;AAC/B,CAAC;;;;;;;;;;;;;ACnBD;AAAA;AAAA;AAAA;AAAA;AAA+C;AAIU;;;AAEzD,IAAI,qEAAW,CAAC,UAAU,EAAE;IAC1B,oEAAc,EAAE,CAAC;CAClB;AAED,2EAAwB,gBAAgB,CAAC,0DAAU;KAChD,KAAK,CAAC,GAAG,CAAC,EAAE,CAAC,OAAO,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC","file":"main-es2015.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\n\nconst routes: Routes = [];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AppServiceService {\n\n    constructor(private http: HttpClient) { }\n    rootURL = '/geojson';\n    getGeoJSON(layer: string) {\n        return this.http.get(this.rootURL + '/dashboard/' + layer);\n    }\n    getGeoJSONFetch(layer: string) {\n        return this.http.get(this.rootURL + '/fetch/' + layer);\n    }\n}\n","import { Component, OnDestroy, OnInit } from '@angular/core';\nimport { Subject } from 'rxjs';\nimport { takeUntil } from 'rxjs/operators';\nimport { AppServiceService } from './app-service.service';\nimport View from 'ol/View';\n// import OSM from 'ol/source/OSM';\nimport { TileWMS, Cluster, Vector as VectorSource } from \"ol/source\";\nimport SourceOSM from 'ol/source/OSM';\nimport { XYZ } from 'ol/source';\nimport SourceStamen from 'ol/source/Stamen';\nimport { defaults, FullScreen, OverviewMap, Rotate, ScaleLine, Attribution, MousePosition } from \"ol/control\";\nimport { Vector as VectorLayer } from 'ol/layer';\nimport LayerGroup from 'ol/layer/Group';\nimport TileLayer from 'ol/layer/Tile';\nimport { createEmpty, extend, getWidth, getHeight } from \"ol/extent\";\nimport { transform } from \"ol/proj\";\nimport LayerSwitcher from 'ol-layerswitcher';\nimport { GeoJSON } from 'ol/format';\nimport { Style, Circle, Fill, Stroke, Text } from \"ol/style\";\nimport Feature from \"ol/Feature\";\nimport { BaseLayerOptions, GroupLayerOptions } from 'ol-layerswitcher';\nimport Geometry from 'ol/geom/Geometry';\nimport { MapBrowserEvent } from 'ol';\nimport {length,point,booleanPointInPolygon} from \"@turf/turf\";\n\nimport MapOL from 'ol/Map';\nimport { rand_color,beautify_numbers } from '../helpers';\nimport MultiPoint from 'ol/geom/MultiPoint';\n@Component({\n    selector: 'app-root',\n    templateUrl: './app.component.html',\n    styleUrls: ['./app.component.css']\n})\nexport class AppComponent implements OnDestroy,OnInit {\n    title = 'dashbrd';\n    map: MapOL;\n    communes: any[] = [];\n    bacs_prov: any;\n    itineraires_collecte: any[] = [];\n    displayedColumns: string[] = [];\n    destroy$: Subject<boolean> = new Subject<boolean>();\n    constructor(private service:AppServiceService){}\n    bases: TileLayer[] = [\n        new TileLayer({\n            title: 'OSM',\n            type: 'base',\n            visible: true,\n            source: new SourceOSM({\n                // \n                attributions: [\n                    \"@ Younes M'rabti SDMB\"\n                ]\n            })\n        } as BaseLayerOptions),\n        new TileLayer({\n            title: 'Satellite',\n            type: 'base',\n            visible: false, wrapX: false,\n            source: new XYZ({\n                attributions: null,\n                attributionsCollapsible: false,\n                url: 'https://services.arcgisonline.com/ArcGIS/rest/services/World_Imagery/MapServer/tile/{z}/{y}/{x}',\n                maxZoom: 23\n            })\n        } as BaseLayerOptions),\n        new TileLayer({\n            title: 'Water color',\n            type: 'base',\n            visible: false,\n            source: new SourceStamen({\n                layer: 'watercolor'\n            })\n        } as BaseLayerOptions),\n        new TileLayer({\n            title: 'Toner',\n            type: 'base',\n            visible: false,\n            source: new SourceStamen({\n                layer: 'toner'\n            })\n        } as BaseLayerOptions),\n        new TileLayer({\n            title: 'Terrain Labels',\n            type: 'base',\n            visible: false,\n            source: new SourceStamen({\n                layer: 'terrain-labels'\n            })\n        } as BaseLayerOptions),\n        new TileLayer({\n            title: 'Terrain',\n            type: 'base',\n            visible: false,\n            source: new SourceStamen({\n                layer: 'terrain'\n            })\n        } as BaseLayerOptions),\n    ];\n    private baseMaps: any = new LayerGroup({\n        title: 'Fonts fe Cartes',\n        layers: this.bases,\n        fold: \"close\"\n    } as GroupLayerOptions);\n    // pdf = new jsPDF('landscape', undefined, \"a3\");\n    vector: VectorLayer = new VectorLayer();\n\n    currentResolution: number = 0;\n\n    createClusterStyle = (feature: Feature): Style => {\n        // var name = feature.get('name');\n        // var magnitude = parseFloat(name.substr(2));\n        var radius = 5 //+ 20 * (magnitude - 5);\n        return new Style({\n            geometry: feature.getGeometry(),\n            image: new Circle({\n                radius: radius,//feature.get('radius'),\n                fill: new Fill({\n                    color: [155, 0, 0]\n                })\n            })\n        });\n    }\n    selectStyleFunction = (feature: Feature): Style[] => {\n        var styles_ = [];\n        var originalFeatures = feature.get('features');\n        // console.log(originalFeatures);\n        if (originalFeatures) {\n            styles_.push(new Style({\n                image: new Circle({\n                    radius: feature.get('radius'),\n                    fill: new Fill({\n                        color: 'rgba(255, 0, 0, 0)'\n                    })\n                })\n            }));\n            originalFeatures.forEach((element: Feature<Geometry>) => {\n                styles_.push(this.createClusterStyle(element));\n            });\n        }\n        return styles_;\n    }\n    cluster2 = (url: string, distance: number, bgcolor: string): VectorLayer => {\n        let styleFunction = (feature: Feature, resolution: number): Style => {\n            if (resolution !== this.currentResolution) {\n                calculateClusterInfo(resolution);\n                this.currentResolution = resolution;\n            }\n            let style;\n            let size = feature.get('features').length;\n            if (size > 1) {\n                style = new Style({\n                    image: new Circle({\n                        radius: 10,//feature.get('radius'),\n                        fill: new Fill({\n                            color: bgcolor\n                        })\n                    }),\n                    text: new Text({\n                        text: size.toString(),\n                        fill: new Fill({\n                            color: '#fff'\n                        }),\n                        stroke: new Stroke({\n                            color: 'rgba(0, 0, 0, 1)',\n                            width: 3\n                        })\n                    })\n                });\n            } else {\n                let originalFeature = feature.get('features')[0];\n                style = this.createClusterStyle(originalFeature);\n            }\n            return style;\n        }\n\n        var vectorSrc = new VectorSource({\n            format: new GeoJSON(),\n            url,\n            /* loader: function (extent, resolution, projection) {\n                var xhr = new XMLHttpRequest();\n                xhr.open('GET', url);\n                var onError = function () {\n                    console.log(\"Error xhr\");\n                }\n                xhr.onerror = onError;\n                xhr.onload = function () {\n                    if (xhr.status == 200) {\n                        let geo_json = JSON.parse(xhr.responseText);\n                        console.log({geo_json});\n                        const format = new GeoJSON();\n                        let ftrs2Add = format.readFeatures(url, {  featureProjection: 'EPSG:3857' });\n                        console.log({ftrs2Add,geo_json});\n                        vectorSrc.addFeatures(ftrs2Add);\n                    } else {\n                        onError();\n                    }\n                }\n                xhr.send();\n            },\n            strategy:bbox  */\n        });\n        let vector = new VectorLayer({\n            title: 'BACS Référentiel',\n            visible: true,\n            source: new Cluster({\n                distance,\n                source: vectorSrc\n            }),\n            style: styleFunction\n        } as BaseLayerOptions);\n        let calculateClusterInfo = (resolution: number): void => {\n            // maxFeatureCount;\n            var features = vector.getSource().getFeatures();\n            var feature, radius;\n            for (var i = features.length - 1; i >= 0; --i) {\n                feature = features[i];\n                var originalFeatures = feature.get('features');\n                var extent = createEmpty();\n                var j = 0, jj = 0;\n                for (j = 0, jj = originalFeatures.length; j < jj; ++j) {\n                    extend(extent, originalFeatures[j].getGeometry().getExtent());\n                }\n                // maxFeatureCount = Math.max(maxFeatureCount, jj);\n                radius = 0.25 * (getWidth(extent) + getHeight(extent)) /\n                    resolution;\n                feature.set('radius', radius);\n            }\n        };\n        return vector;\n    }\n    // url_servey1: string = '/geoserver/dashboard/ows?service=WFS&version=1.0.0&request=GetFeature&typeName=dashboard%3Asurvey1&outputFormat=application%2Fjson';\n    url_servey: string = '/geojson/fetch/bacs_province';\n    commune_selected = new VectorLayer({\n        source: new VectorSource(),\n        style:new Style({\n            stroke: new Stroke({\n                color:\"red\",width:5\n            })\n        }),\n        visible:true\n    } as BaseLayerOptions);\n\n    communes_berkane: TileLayer = new TileLayer({\n        title: 'Communes de BERKANE',\n        // type: 'Overlays',\n        visible: true,\n        opacity: 0.7,\n        source: new TileWMS({\n            url: \"http://sigsrv:8080/geoserver/dashboard/wms\",\n            params: {\n                \"LAYERS\": \"communes_de_berkane\",\n                \"TRANSPARENT\": \"true\",\n                \"WIDTH\": 640,\n                \"HEIGHT\": 480\n            },\n        }),\n    } as BaseLayerOptions)\n    couches: any = new LayerGroup({\n        title: 'Couches',\n        fold: \"open\",\n        layers: [\n            new TileLayer({\n                title: 'Secteurs de berkane',\n                // type: 'Overlays',\n                visible: false,\n                opacity: 0.35,\n                source: new TileWMS({\n                    url: \"http://sigsrv:8080/geoserver/dashboard/wms\",\n                    params: {\n                        \"LAYERS\": \"secteurs_berkane\",\n                        \"TRANSPARENT\": \"true\",\n                        \"WIDTH\": 640,\n                        \"HEIGHT\": 480\n                    }\n                }),\n            } as BaseLayerOptions),\n            new TileLayer({\n                title: 'Itineraires Collecte',\n                // type: 'Overlays',\n                visible: true,\n                source: new TileWMS({\n                    url: \"http://sigsrv:8080/geoserver/dashboard/wms\",\n                    params: {\n                        \"LAYERS\": \"itineraires10\",\n                        \"TRANSPARENT\": \"true\",\n                        \"WIDTH\": 640,\n                        \"HEIGHT\": 480\n                    },\n                }),\n            } as BaseLayerOptions),\n            new TileLayer({\n                title: 'Débardeurs',\n                // type: 'Overlays',\n                visible: true,\n                opacity: 0.3,\n                source: new TileWMS({\n                    url: \"http://sigsrv:8080/geoserver/dashboard/wms\",\n                    params: {\n                        \"LAYERS\": \"debardeurs_province\",\n                        \"TRANSPARENT\": \"true\",\n                        \"WIDTH\": 640,\n                        \"HEIGHT\": 480\n                    },\n                }),\n            } as BaseLayerOptions),\n            this.communes_berkane,\n            new VectorLayer({\n\n            }),\n            this.cluster2(this.url_servey, 50, 'red'),\n            this.commune_selected\n        ]\n    } as GroupLayerOptions);\n    layerSwitcher: any = new LayerSwitcher({\n        tipLabel: \"Layer Switcher\",\n        reverse: true,\n        groupSelectStyle: 'group'\n    });\n\n    distanceBOM: string;\n    distanceBSAT: string;\n    NBR_BACS: string=\"100\";\n    distanceBalMeca: string;\n    distanceBalElec: string;\n    distanceDEB: string;\n    distanceNettoi: string;\n    \n    clickMap(): void {\n        this.map\n    }\n    exportMap(evt): void {\n        console.log(evt);\n    }\n    initView: View = new View({\n        center: [-263091.64, 4144972.30],//transform([-270494.22186113556, 4146419.677142665], \"EPSG:4326\", \"EPSG:3857\"),\n        zoom: 10.5\n    });\n    ngOnInit(): void {\n        this.map = new MapOL({\n            view: this.initView,\n            controls: defaults({\n                attribution: false, attributionOptions: {\n                    render: () => false\n                }\n            }).extend([\n                this.layerSwitcher,\n                new ScaleLine({\n                    bar: true,\n                    minWidth: 120,\n                    steps: 4, text: true\n                }),\n                new OverviewMap({\n                    layers: [this.communes_berkane]\n                }),\n                new FullScreen({\n\n                }), new Rotate({\n                    duration: 500\n                }),\n                new Attribution({}), new MousePosition({})\n            ]),\n            layers: [\n                this.baseMaps,\n                this.couches\n            ],\n            target: 'ol-map'\n        });\n        let localmap:MapOL=this.map;\n        this.map.on(\"singleclick\", function (evt: MapBrowserEvent<UIEvent>) {\n            console.log(localmap.getView().getCenter());\n        });\n        this.updateIndicateurs();\n        this.getCommunes();\n    }\n    updateIndicateurs():void{\n        this.service.getGeoJSONFetch(\"irineraire_mini_bal_meca\").pipe(takeUntil(this.destroy$)).subscribe((data: any) => {\n            let global_dist = data.features.reduce((distance: number, feature: any) => {\n                let longueur = length(feature, { units: 'meters' });\n                let cumul = distance + longueur;\n                this.distanceBalMeca = cumul.toString();\n                return cumul;\n            }, 0);\n            this.distanceBalMeca = beautify_numbers(Math.ceil(global_dist));\n            // this.distanceBalElec = k.valeur;\n        });\n        this.service.getGeoJSONFetch(\"irineraire_mini_bal_elct\").pipe(takeUntil(this.destroy$)).subscribe((data: any) => {\n            let global_dist = data.features.reduce((distance: number, feature: any) => {\n                let longueur = length(feature, { units: 'meters' });\n                let cumul = distance + longueur;\n                return cumul;\n            }, 0);\n            this.distanceBalElec = beautify_numbers(Math.ceil(global_dist));\n            // this.distanceBalElec = k.valeur;\n        });\n        this.service.getGeoJSONFetch(\"irineraire_nettoiement\").pipe(takeUntil(this.destroy$)).subscribe((data: any) => {\n            let global_dist = data.features.reduce((distance: number, feature: any) => {\n                let longueur = length(feature, { units: 'meters' });\n                let cumul = distance + longueur;\n                return cumul;\n            }, 0);\n            this.distanceNettoi = beautify_numbers(Math.ceil(global_dist));\n            // this.distanceBalElec = k.valeur;\n        });\n        this.service.getGeoJSONFetch(\"debardeurs_province\").pipe(takeUntil(this.destroy$)).subscribe((data: any) => {\n            let global_dist = data.features.reduce((distance: number, feature: any) => {\n                let longueur = length(feature, { units: 'meters' });\n                let cumul = distance + longueur;\n                return cumul;\n            }, 0);\n            this.distanceDEB = beautify_numbers(Math.ceil(global_dist));\n            // this.distanceBalElec = k.valeur;\n        });\n        this.service.getGeoJSONFetch(\"itineraires10\").pipe(takeUntil(this.destroy$)).subscribe((json: any) => {\n            let bsat = beautify_numbers(json.features.filter((i: any) => i.properties.type == \"BSAT\").reduce((a: number, c: any) => {\n                return a + length(c, { units: 'meters' });\n            }, 0).toFixed(0))\n            let bom = beautify_numbers(json.features.filter((i: any) => i.properties.type == \"BOM\").reduce((a: number, c: any) => {\n                return a + length(c, { units: 'meters' });\n            }, 0).toFixed(0));\n            this.distanceBOM = bom;\n            this.distanceBSAT = bsat;\n            this.itineraires_collecte = json;\n        });\n        this.service.getGeoJSONFetch(\"survey1\").pipe(takeUntil(this.destroy$)).subscribe((json: any) => {\n            this.NBR_BACS = json.features.length;\n            this.bacs_prov = json;\n        });\n    }\n    getCommunes():void {\n        this.service.getGeoJSONFetch(\"communes_berkane\").pipe(takeUntil(this.destroy$)).subscribe((communes: any) => {\n            this.communes = communes.features;\n            this.displayedColumns = Object.keys(communes.features[0].properties).filter(i=>i!==\"geom\");\n        });\n    }\n    \n    SetInitView(contains:boolean):void{\n        if (contains) {\n            this.map.setView(new View({\n                center: [-263091.64, 4144972.30],\n                zoom: 10.75\n            }));\n            this.commune_selected.setSource(new VectorSource({ }));\n        }\n    }\n    communeClickedPrnt(coordinates: any):void{\n        let geojsonObject = {\n            \"type\": \"Feature\",\n            \"geometry\": {\n                \"type\": \"MultiPolygon\",\n                \"coordinates\": coordinates.map((i2: any) => {\n                    return i2.map((i: any[]) => i.map(ii => transform(ii, \"EPSG:4326\", \"EPSG:3857\")));\n                })\n            }\n        };\n        let featres = (new GeoJSON()).readFeatures(geojsonObject);\n        let srcc = new VectorSource({ features: featres });\n        this.commune_selected.setSource(srcc);\n        let width = 3;\n        let random_style = (color:string) => new Style({\n            stroke: new Stroke({\n                color: color,\n                width\n            })\n        });\n        let ext1 = this.commune_selected.getSource().getExtent();\n        let all_shapes = [];\n\n        featres.forEach(ftre=>{\n            // console.log(ftre.getGeometry());\n        });\n        coordinates[0].forEach(element => {\n            all_shapes = all_shapes.concat(element);\n        });\n        all_shapes.push(all_shapes[0])\n        let ext = [\n            Math.min(...all_shapes.map(i => i[0])),\n            Math.max(...all_shapes.map(i => i[0])),\n            Math.min(...all_shapes.map(i => i[1])),\n            Math.max(...all_shapes.map(i => i[1])),\n        ];\n\n        let min0 = ext[0];\n        let max0 = ext[1];\n        let min1 = ext[2];\n        let max1 = ext[3];\n        let x = (min0 + max0) / 2;\n        let y = (min1 + max1) / 2;\n        let resolution = Math.max(max0 - min0, max1 - min1) * 360;\n\n        let centerCommunes = transform([x, y], \"EPSG:4326\", \"EPSG:3857\");\n        this.map.getView().setCenter(centerCommunes);\n        this.map.getView().setResolution(resolution);\n        let mx = 5;\n        for (let i = 0; i <= mx; i++) {\n            if (i < mx) {\n                setTimeout(() => {\n                    this.commune_selected.setStyle(random_style(rand_color()));\n                }, 100 * i)\n            }\n            else {\n                setTimeout(() => {\n                    this.commune_selected.setStyle(random_style(\"red\"));\n                }, 100 * i)\n            }\n\n        }\n\n        /* let bacs_de_pv = this.bacs_prov.features.filter(feat => {\n            let _point_ = point(feat.geometry.coordinates);\n            return booleanPointInPolygon(_point_, srcc);\n        });\n        this.NBR_BACS = bacs_de_pv.length;\n        let bacs_province = bacs_de_pv.map((i:any) => transform(i.geometry.coordinates, \"EPSG:4326\", \"EPSG:3857\"));\n        var geom = new MultiPoint(bacs_province);\n        var feature = new Feature(geom);\n        source_bacs.clear();\n        source_bacs.addFeature(feature);\n\n        let liste_bacs = bacs_de_pv.map(u => u.properties);\n        let map = new Map(liste_bacs.map(({ etat_du_ba }) => [etat_du_ba, { name: etat_du_ba, percent: 0, color: rand_color() }]));\n        for (let { etat_du_ba } of liste_bacs) map.get(etat_du_ba).percent += 1;\n        let result = Array.from(map.values());\n        let pie = result.map(com => {\n            let name = s(com.name);\n            return {\n                ...com,\n                name,\n                percent: (com.percent * 100 / result.reduce((a, c) => a + c.percent, 0)).toFixed(2)\n            };\n        });\n        pieChart(pie, 0, pie_chart2, pie_chart_legend2, false); */\n        // console.log(featres[0].getGeometry());\n    }\n    ngOnDestroy(): void {\n    }\n}\n\n","<app-navbar></app-navbar>\n<app-indicateurs\n[(distanceDEB)]=\"distanceDEB\"\n[(distanceNettoi)]=\"distanceNettoi\"\n[(distanceBalElec)]=\"distanceBalElec\"\n[(distanceBalMeca)]=\"distanceBalMeca\"\n\n[(distanceBSAT)]=\"distanceBSAT\"\n[(distanceBOM)]=\"distanceBOM\"\n[(NBR_BACS)]=\"NBR_BACS\"\n>\n\n</app-indicateurs>\n<div class=\"row dark\">\n    <div id=\"communes_berkane\" class=\"col-md-2 division\" style=\"color: rgb(161, 161, 161);\">\n        <app-select-list *ngIf=\"communes.length !== 0\" [communes]=\"communes\" (commune_click)=\"communeClickedPrnt($event)\" (setView)=\"SetInitView($event)\"></app-select-list>\n    </div>\n    <div class=\"col-lg-7\" id=\"carte\">\n        <app-map></app-map>\n    </div>\n    <div class=\"col-md-3 leftaside\">\n        <app-charts [(bacs_prov)]=\"bacs_prov\"></app-charts>\n    </div>\n\n</div>\n\n<div id=\"tabs\">\n    <mat-tab-group>\n        <mat-tab label=\"Communes\">\n            <table mat-table [dataSource]=\"communes\" class=\"table table-hover table-dark mat-elevation-z8\">\n            \n                <!--- Note that these columns can be defined in any order.\n                                    The actual rendered columns are set as a property on the row definition\" -->\n                <!--  \n                                <ng-container matColumnDef=\"position\">\n                                    <th mat-header-cell *matHeaderCellDef> No. </th>\n                                    <td mat-cell *matCellDef=\"let element\"> {{element.position}} </td>\n                                </ng-container>\n                    \n                                <ng-container matColumnDef=\"name\">\n                                    <th mat-header-cell *matHeaderCellDef> Name </th>\n                                    <td mat-cell *matCellDef=\"let element\"> {{element.name}} </td>\n                                </ng-container>\n                    \n                                <ng-container matColumnDef=\"weight\">\n                                    <th mat-header-cell *matHeaderCellDef> Weight </th>\n                                    <td mat-cell *matCellDef=\"let element\"> {{element.weight}} </td>\n                                </ng-container>\n                    \n                                \n                                <ng-container matColumnDef=\"symbol\">\n                                    <th mat-header-cell *matHeaderCellDef> Symbol </th>\n                                    <td mat-cell *matCellDef=\"let element\"> {{element.symbol}} </td>\n                                </ng-container>\n                                -->\n            \n                <ng-container [matColumnDef]=\"col\" *ngFor=\"let col of displayedColumns\">\n                    <th mat-header-cell *matHeaderCellDef> {{ col | uppercase }} </th>\n                    <td mat-cell *matCellDef=\"let element\"> {{ element.properties[col] }} </td>\n                </ng-container>\n            \n                <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n                <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\n            </table>\n        </mat-tab>\n        <mat-tab label=\"Itineraires de collecte\"> Content 2 </mat-tab>\n        <mat-tab label=\"Bacs de Réference\"> Content 3 </mat-tab>\n        <mat-tab label=\"Bacs en temps réel\"> Content 3 </mat-tab>\n    </mat-tab-group>\n</div>\n\n<!-- <button class=\"tablink\">Communes</button>\n<button class=\"tablink\">Itineraires de collecte</button>\n<button class=\"tablink\">Bacs de Réference</button>\n<button class=\"tablink\">Bacs en temps réel</button>\n\n<div id=\"Communes\" class=\"tabcontent sticky-bottom\">\n    \n</div>\n\n<div id=\"itineraires_collecte\" class=\"tabcontent sticky-bottom\">\n</div>\n\n<div id=\"bacs_reference\" class=\"tabcontent sticky-bottom\">\n</div>\n\n<div id=\"bacs_real_time\" class=\"tabcontent sticky-bottom\">\n</div>\n<div id=\"tabs\" class=\"row\">\n</div> -->\n<router-outlet></router-outlet>","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { HttpClientModule } from '@angular/common/http';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { MapComponent } from './map/map.component';\nimport { NavbarComponent } from './navbar/navbar.component';\nimport { ChartsComponent } from './charts/charts.component';\n\nimport { IndicateursComponent } from './indicateurs/indicateurs.component';\nimport { SelectListComponent } from './select-list/select-list.component';\nimport { MatTabsModule } from \"@angular/material/tabs\";\nimport { MatTableModule } from \"@angular/material/table\";\nimport { MatButtonToggleModule } from \"@angular/material/button-toggle\";\nimport { BrowserAnimationsModule } from \"@angular/platform-browser/animations\";\n\n@NgModule({\n    declarations: [\n        AppComponent,\n        MapComponent,\n        NavbarComponent,\n        ChartsComponent,\n        IndicateursComponent,\n        SelectListComponent\n    ],\n    imports: [\n        HttpClientModule,\n        BrowserModule,\n        AppRoutingModule,\n        MatTabsModule, MatTableModule,\n        BrowserAnimationsModule,\n        MatButtonToggleModule\n    ],\n    providers: [],\n    bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Component, Input, OnInit } from '@angular/core';\nimport { deg2rad, pt_cir, rand_color } from '../../helpers';\n\n@Component({\n    selector: 'app-charts',\n    templateUrl: './charts.component.html',\n    styleUrls: ['./charts.component.css']\n})\nexport class ChartsComponent implements OnInit {\n\n    constructor() { }\n    @Input() bacs_prov: any;\n    length_swips:number=2;\n    pie_prov:any[]=[];\n    pie_prov_legend:any[]=[];\n    pie_prov_txt:any[]=[];\n\n    currentPage:number = 1;\n\n    ngOnInit(): void {\n        let pie_sti=setInterval(() => {\n            console.log(this.bacs_prov);\n            if (this.bacs_prov.length !== 0) {\n                clearInterval(pie_sti);\n                this.pie(this.bacs_prov);\n            }\n        }, 1000);\n        // this.pie(this.bacs_prov);this.pieChart(pie, 0, 'pie_chart', 'pie_chart_legend', true);\n    }\n    \n    increment():void{\n        // let courbes = document.querySelectorAll(\".courbe1\");\n        this.currentPage++;\n        if (this.currentPage > this.length_swips) {\n            this.currentPage = 1;\n        }\n    }\n    decrement(): void {\n        // let courbes = document.querySelectorAll(\".courbe1\");\n        this.currentPage--;\n        if (this.currentPage <= 0) {\n            this.currentPage = this.length_swips;\n        }\n    }\n    pie(json: any): void {\n        let liste_bacs = json.features.map((u: any) => u.properties);\n        let map: any = new Map(liste_bacs.map(({ Commune_Fr }) => [Commune_Fr, { name: Commune_Fr, percent: 0, color: rand_color() }]));\n        for (let { Commune_Fr } of liste_bacs) map.get(Commune_Fr).percent += 1;\n        let result = Array.from(map.values());\n        let pie = result.map((com: any) => ({ ...com, percent: (com.percent * 100 / json.features.length).toFixed(2) }));\n        this.pieChart(pie,0,'','',true);\n    }\n    pieChart(params: any, r: number, piechart: any, piechartlegend: any, province_chart: any): void {\n        let rayon = 150;\n        let angle_start = 90;\n        /* \n        piechart.empty();\n        piechartlegend.empty();\n        let seuil = 10;let chartsactif = params.sort((a, b) => b.percent - a.percent).filter((_u, i) => i <= seuil);\n        let chartsinactif = params.sort((a, b) => b.percent - a.percent).filter((_u, i) => i > seuil);\n        let autres_names = chartsinactif.reduce((a, c, i) => {\n            return a + c.name + \", \";\n        }, \"\").split('').reduce((a, c, i) => {\n            let curr = i % 20 === 0 && i !== 0 ? c + \"<br>\" : c;\n            return a + curr;\n        }, \"\");\n        let autres = {\n            name: `Autres (${autres_names})`, color: rand_color(),\n            percent: chartsinactif.reduce((a, c) => a + parseFloat(c.percent), 0).toFixed(2)\n        } */\n        /* canvas_charte.width = 400;\n        canvas_charte.height = 400;\n        canvas_legend.width = 400;\n        canvas_legend.height = 800; */\n        // console.log(province_chart);\n        /* let ctx_charte = canvas_charte.getContext(\"2d\");\n        let ctx_legend = canvas_legend.getContext(\"2d\");\n        let canvas_charte_width = canvas_charte.width;\n        let canvas_charte_height = canvas_charte.height;\n        let canvas_legend_width = canvas_legend.width;\n        let canvas_legend_height = canvas_legend.height;\n        if (province_chart) {\n            ctx_legend.clearRect(0, 0, canvas_legend_width, canvas_legend_height);\n            ctx_charte.clearRect(0, 0, canvas_charte_width, canvas_charte_height);\n            ctx_legend.fillStyle = \"white\";\n            ctx_legend.fillRect(0, 0, canvas_legend_width, canvas_legend_height);\n            ctx_charte.fillStyle = \"white\";\n            ctx_charte.fillRect(0, 0, canvas_legend_width, canvas_legend_height);\n        } */\n        // chartsactif.concat(chartsinactif.length !== 0 ? autres : [])\n        params.sort((a: { percent: number; }, b: { percent: number; }) => b.percent - a.percent)\n            .forEach((chart: { percent: number; name: string; color: string; }, i: number) => {\n                let angle = chart.percent * 3.6;\n                let move = pt_cir(r, (angle_start + angle / 2));\n                let pt_s = pt_cir(rayon, angle_start, move.x, move.y);\n                let pt_e = pt_cir(rayon, angle_start + angle, move.x, move.y);\n                let xs = pt_s.x + move.x; let ys = pt_s.x + move.y;\n                let xe = pt_e.x + move.x; let ye = pt_e.x + move.y;\n                let title = `${chart.name} (${chart.percent} %)`;\n                let d1 = `M${xs + \" \" + ys},${move.p},${xe + \" \" + ye}A${rayon} ${rayon} 0 ${chart.percent >= 50 ? 1 : 0} 0 ${xs + \" \" + ys}`;\n                let d2 = `M${pt_s.p},${move.p},${pt_e.p}A${rayon} ${rayon} 0 ${chart.percent >= 50 ? 1 : 0} 0 ${pt_s.p}`;\n                let h = 40, p = 10, l = 40, pl = 10;\n                let x = 2 * pl + l;\n                let y = (h + p) * i + h;\n                /* if (province_chart) {\n                    let l = 30, h = 30, p = 10, pl = 10;\n                    let x = 2 * pl + l;\n                    let y = (h + p) * i + h;\n                    ctx_legend.font = \"20px Arial\";\n                    ctx_charte.beginPath();\n                    ctx_charte.moveTo(canvas_charte_width / 2, canvas_charte_height / 2);\n                    ctx_charte.arc(\n                        canvas_charte_width / 2, canvas_charte_height / 2,\n                        0.95 * Math.min(canvas_charte_width / 2, canvas_charte_height / 2),\n                        deg2rad(angle_start), deg2rad(angle_start + angle), false\n                    );\n                    ctx_charte.fillStyle = chart.color;\n                    ctx_charte.fill();\n                    ctx_charte.closePath();\n                    ctx_legend.fillStyle = chart.color;\n                    ctx_legend.fillRect(pl, (h + p) * i, l, h);\n                    ctx_legend.fillStyle = \"black\";\n                    ctx_legend.fillText(title, x, y);\n                } */\n                // ctx.stroke();\n                let piechart:any;\n                if (params.length == 1) {\n                    piechart = { r: rayon, stroke: \"red\", fill: chart.color, style: \"stroke-width:0;\", title };\n                } else {\n                    piechart = { d: d2, stroke: \"red\", fill: chart.color, style: \"stroke-width:0;\", title };\n                }\n                addNs(piechart, \"path\", \"piechart[0]\");\n                let pilegendrects = { d: `m${pl} ${(h + p) * i},${l} 0,0 ${h},${-l} 0,0 ${-h}z`, stroke: \"red\", fill: chart.color, style: \"stroke-width:1;\" };\n                let pilegendtxt = { x, y, fill: 'white', stroke: \"black\", style: `font-size:22;font-family:\"Arial\";`,title };\n                addNs(pilegendrects, \"path\", piechartlegend[0]);\n                addNs(pilegendtxt, \"text\", piechartlegend[0], title);\n                angle_start += angle;\n                this.pie_prov.push(piechart);\n                this.pie_prov_legend.push(pilegendrects);\n                this.pie_prov_txt.push(pilegendtxt);\n            });\n        /* document.body.appendChild(canvas_charte);\n        document.body.appendChild(canvas_legend);\n        return params.sort((a, b) => a.percent - b.percent); */\n    }\n}\nfunction addNs(..._args:any) {\n    \n}","<div id=\"courbe0\">\n    <button class=\"btn btn-dark arrowbtnC1L\" style=\"float:left\" (click)=\"decrement()\">\n        <i class=\"fas fa-arrow-left\"></i>\n    </button>\n    <button class=\"btn btn-dark arrowbtnC1R\" style=\"float:right;top: 0%;\" (click)=\"increment()\">\n        <i class=\"fas fa-arrow-right\"></i>\n    </button>\n    <br>\n    <div class=\"courbe1\" id=\"courbe1-1\" *ngIf=\"currentPage==1\">\n        <a>Répartition des bacs par province</a>\n        <svg width=\"100%\" viewBox=\"-200,-200,400,400\" id=\"pie_chart\" *ngIf=\"pie_prov\">\n            <path *ngFor=\"let chart of pie_prov; let i = index\" [attr.d]=\"chart.d\" [attr.stroke]=\"chart.stroke\" [attr.fill]=\"chart.fill\" style=\"stroke-width: 0;\" />\n        </svg>\n        <svg width=\"100%\" viewBox=\"0,0,600,800\" id=\"pie_chart_legend\" *ngIf=\"pie_prov_legend\">\n            <path *ngFor=\"let chart_prv of pie_prov_legend; let i = index\" [attr.d]=\"chart_prv.d\" [attr.stroke]=\"chart_prv.stroke\" [attr.fill]=\"chart_prv.fill\" style=\"stroke-width: 0;\" />\n            <text *ngFor=\"let chart_txt of pie_prov_txt; let i = index\" [attr.x]=\"chart_txt.x\" [attr.y]=\"chart_txt.y\" [attr.fill]=\"chart_txt.fill\" style=\"font-size: 22;font-family: 'Times New Roman', Times, serif;\" >{{chart_txt.title}}</text>\n        </svg>\n        <canvas id=\"pie_canv_ch\" width=\"400\" height=\"400\" style=\"border:1px solid #d3d3d3;display: none;\"></canvas>\n        <canvas id=\"pie_canv_lg\" width=\"400\" height=\"600\" style=\"border:1px solid #d3d3d3;display: none;\"></canvas>\n    </div>\n    <div class=\"courbe1\" id=\"courbe1-2\" *ngIf=\"currentPage==2\">\n        <a>États des bacs sur la commune</a>\n        <svg width=\"100%\" viewBox=\"-200,-200,400,400\" id=\"pie_chart2\">\n        </svg>\n        <svg width=\"100%\" viewBox=\"0,0,400,400\" id=\"pie_chart_legend2\">\n        </svg>\n    </div>\n    <!-- <div class=\"courbe1\" id=\"courbe1-3\" *ngIf=\"currentPage==3\">\n        <a>Table 3</a>\n    </div>\n    <div class=\"courbe1\" id=\"courbe1-4\" *ngIf=\"currentPage==4\">\n        <a>Table 4</a>\n    </div>\n    <div class=\"courbe1\" id=\"courbe1-5\" *ngIf=\"currentPage==5\">\n        <a>Table 5</a>\n    </div> -->\n</div>\n\n<!-- d=\"{{chart.d}}\" stroke=\"{{chart.stroke}}\" fill=\"{{chart.fill}}\" -->","import { Component, Input, OnInit } from '@angular/core';\n\n@Component({\n    selector: 'app-indicateurs',\n    templateUrl: './indicateurs.component.html',\n    styleUrls: ['./indicateurs.component.css']\n})\nexport class IndicateursComponent implements OnInit {\n    transportationService: any;\n\n    constructor() { }\n    bacClicked() {\n        console.log(\"bacClicked\");\n    }\n\n\n    @Input() distanceBalMeca: string;\n    @Input() distanceBalElec: string;\n    @Input() distanceNettoi: string;\n    @Input() distanceDEB: string;\n\n    @Input() NBR_BACS: string;\n    @Input() distanceBOM: string;\n    @Input() distanceBSAT: string;\n\n    showConfig() {\n        console.log(\"Config\");\n    }\n    ngOnInit(): void {\n    }\n\n}\n","<nav class=\"row\">\n    <div class=\"col-md-1\"></div>\n    <div class=\"col-md-2\">\n        <div class=\"indicateur\">\n            <a class=\"agenrem\">Distance Nettoiement</a>\n            <div data-view=\"Distance\" class=\"logo-genre\">\n                <svg width=\"50\"  height=\"50\" viewbox=\"-50,-50,100,100\">\n                    <line x1=\"-45\" y1=\"-45\" x2=\"45\" y2=\"45\" stroke=\"#987db7\" stroke-width=\"5\" />\n                </svg>\n                <br>\n                <a id=\"distanceNettoi\" class=\"logoaexc\" style=\"margin-bottom:36%;font-size: 24px;\">{{distanceNettoi}} m</a>\n            </div>\n        </div>\n    </div>\n    <div class=\"col-md-2\">\n        <div class=\"indicateur\">\n            <a class=\"aexc\">Distance BOM</a>\n            <div class=\"logo\"><svg width=\"50\"  height=\"50\" viewbox=\"-50,-50,100,100\">\n                    <line x1=\"-45\" y1=\"-45\" x2=\"45\" y2=\"45\" stroke=\"#eeee00\" stroke-width=\"5\" />\n                </svg>\n                <br>\n                <a id=\"distanceBOM\" class=\"logoaexc\" style=\"margin-bottom:36%;font-size: 24px;\">{{distanceBOM}} m</a>\n            </div>\n        </div>\n    </div>\n    <div class=\"col-md-2\">\n        <div class=\"indicateur\">\n            <a class=\"aexc\">Distance BSAT</a>\n            <div class=\"logo\"><svg width=\"50\"  height=\"50\" viewbox=\"-50,-50,100,100\">\n                    <line x1=\"-45\" y1=\"-45\" x2=\"45\" y2=\"45\" stroke=\"#eeee00\" stroke-width=\"5\" />\n                </svg>\n                <br>\n                <a id=\"distanceBSAT\" class=\"logoaexc\" style=\"margin-bottom:36%;font-size: 24px;\">{{distanceBSAT}} m</a>\n            </div>\n        </div>\n    </div>\n    <div class=\"col-md-2\">\n        <div class=\"indicateur\">\n\n            <a class=\"adec\">Distance Balayage mécanique</a>\n            <div class=\"logo\"><svg width=\"50\"  height=\"50\" viewbox=\"-50,-50,100,100\">\n                    <line x1=\"-45\" y1=\"-45\" x2=\"45\" y2=\"45\" stroke=\"#e77148\" stroke-width=\"5\" />\n                </svg>\n                <br>\n                <a id=\"distanceBalMec\" class=\"logoam\" style=\"margin-bottom:36%;font-size: 24px;\">{{distanceBalMeca}} m</a>\n            </div>\n        </div>\n\n    </div>\n    <div class=\"col-md-2\">\n        <div class=\"indicateur\">\n\n            <a class=\"ague\">Distance Balayage électrique</a>\n            <div class=\"logo\"><svg width=\"50\"  height=\"50\" viewbox=\"-50,-50,100,100\">\n                    <line x1=\"-45\" y1=\"-45\" x2=\"45\" y2=\"45\" stroke=\"#b7484b\" stroke-width=\"5\" />\n                </svg>\n                <br>\n                <a id=\"distanceBalElec\" class=\"logoag\" style=\"margin-bottom:36%;font-size: 24px;\">{{distanceBalElec}} m</a>\n            </div>\n        </div>\n    </div>\n    <div class=\"col-md-1\"></div>\n\n</nav>\n<nav class=\"row\">\n    <div class=\"col-md-4\"></div>\n\n    <div class=\"col-md-2 \">\n        <div class=\"indicateur\">\n            <a class=\"ague\">Distance Débardeurs</a>\n            <div class=\"logo\"><svg width=\"50\"  height=\"50\" viewbox=\"-50,-50,100,100\">\n                    <line x1=\"-45\" y1=\"-45\" x2=\"45\" y2=\"45\" stroke=\"#b7484b\" stroke-width=\"5\" />\n                </svg>\n                <br>\n                <a id=\"distanceDebardeurs\" class=\"logoag\" style=\"margin-bottom:36%;font-size: 24px;\">{{distanceDEB}} m</a>\n            </div>\n        </div>\n    </div>\n\n    <div class=\"col-md-2\">\n        <div class=\"indicateur\">\n            <a class=\"amoy\">Nombre de Bacs</a><br>\n            <img src=\"assets/bacicon.png\" (click)=\"showConfig()\" alt=\"bac icon\" width=\"50px\" style=\"display: inline-block;\">\n            <br>\n            <a id=\"nombre_de_bacs\" class=\"logoaexc\" style=\"margin-bottom:36%;font-size: 24px;\">{{NBR_BACS}}</a>\n        </div>\n    </div>\n    <div class=\"col-md-4\"></div>\n\n</nav>","import { Component, Input, OnInit } from '@angular/core';\n\nimport Map from 'ol/Map';\n\n@Component({\n    selector: 'app-map',\n    templateUrl: './map.component.html',\n    styleUrls: ['./map.component.css']\n})\nexport class MapComponent implements OnInit {\n    constructor() { }\n    \n\n    @Input() map: Map;\n    ngOnInit(): void {\n\n        // this.map.addControl(this.layerSwitcher);\n        // console.log(this.communes_berkane);\n    }\n\n}\n","<div class=\"tanileft\" id=\"ol-map\">\n</div>\n<div id=\"popup\" class=\"ol-popup\">\n    <a href=\"#\" id=\"popup-closer\" class=\"ol-popup-closer\"></a>\n    <header class=\"titlehead\" id=\"titlehead\"></header>\n    <div id=\"popup-content\"></div>\n</div>\n<div id=\"info\"></div>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-navbar',\n  templateUrl: './navbar.component.html',\n  styleUrls: ['./navbar.component.css']\n})\nexport class NavbarComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<nav class=\"navbar sticky-top navbar-expand-lg navbar-dark bg-dark\">\n    <div class=\"dropdown\">\n        <button class=\"dropbtn\"><i class=\"fas fa-bars\"></i></button>\n        <div class=\"dropdown-content\">\n            <a href=\"/province_berkane\">Province de Berkane</a>\n            <a href=\"/commune_berkane\">Commune de berkane</a>\n            <a href=\"/sdmb\">SDMB</a>\n        </div>\n    </div>\n    <!-- <button class=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">Click Mez\n                <span class=\"navbar-toggler-icon\"></span>\n            </button> -->\n\n    <div class=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\n        <ul class=\"navbar-nav mr-auto\">\n            <li class=\"nav-item active\">\n                <a class=\"navbar-brand nav-link\" href=\"#\" onclick=\"()=>{return false;}\">\n                    Platforme Dashboard\n                    <span class=\"sr-only\">(current)</span>\n                </a>\n            </li>\n        </ul>\n        <div class=\"dropdown dropdown-right\">\n            <button class=\"dropbtn\" title=\"Module d'Impression\">Imprimer</button>\n            <div id=\"export_dropdown\" class=\"dropdown-content\">\n                <button id=\"export-png\" name=\"exportpng\" class=\"btn btn-default\">Imprimer PNG</button>\n                <div class=\"dropdown-divider\"></div>\n                <button id=\"export-pdf\" name=\"exportpdf\" class=\"btn btn-default\">Imprimer PDF</button>\n            </div>\n\n        </div>\n        <select id=\"format\" onchange=\"typechange()\" class=\"form-control\" data-role=\"select-dropdown\" data-profile=\"minimal\">\n            <option value=\"a0\">Taille de page</option>\n            <option selected value=\"a0\">A0 (Lente)</option>\n            <option value=\"a1\">A1</option>\n            <option value=\"a2\">A2</option>\n            <option value=\"a3\">A3</option>\n            <option value=\"a4\" selected>A4</option>\n            <option value=\"a5\">A5 (Rapide)</option>\n        </select>\n        <select id=\"type\" onchange=\"typechange()\" class=\"form-control\" data-role=\"select-dropdown\" data-profile=\"minimal\">\n            <option value=\"none\">Mesurer</option>\n            <option value=\"length\">Trajet</option>\n            <option value=\"area\">Surface</option>\n        </select>\n    </div>\n</nav>\n","import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\nimport OLMAP from 'ol/Map';\nimport Feature from 'ol/Feature';\nimport GeoJSON, { GeoJSONMultiPolygon } from \"ol/format/GeoJSON\";\nimport { transform } from 'ol/proj';\nimport View from 'ol/View';\n\n\n@Component({\n    selector: 'app-select-list',\n    templateUrl: './select-list.component.html',\n    styleUrls: ['./select-list.component.css']\n})\nexport class SelectListComponent implements OnInit {\n    constructor() { }\n    @Input() communes: any[];\n    @Output() commune_click = new EventEmitter<any>();\n    @Output() setView = new EventEmitter<boolean>();\n    selected: string = \"\";\n\n    communeClicked(event: any, evt) {\n        let correctTarget = event.target.nodeName == \"DIV\" ? event.target : event.target.parentElement;\n        // console.log(correctTarget);\n        // let hasClass = correctTarget.classList.contains('active_liste_select');\n        // hasClass && correctTarget.classList.remove('active_liste_select')\n        this.selected = evt.properties.commune_fr;\n        this.commune_click.emit(evt.geometry.coordinates);\n        document.querySelectorAll(\".active_liste_select\").forEach(\n            i => {\n                if (!i.innerHTML.includes(this.selected)) {\n                    i.classList.remove('active_liste_select')\n                }\n            }\n        );\n        let contains = correctTarget.classList.contains('active_liste_select');\n        \n        this.setView.emit(contains);\n        correctTarget.classList.toggle('active_liste_select');\n    }\n    ngOnInit() {\n    }\n}\n","<div class=\"head-section\">Communes de berkane</div>\n<!-- <mat-button-toggle-group name=\"fontStyle\" aria-label=\"Font Style\">\n    <mat-button-toggle [ngClass]=\"'commune-selection link-commune'\" *ngFor=\"let commune of communes; let i = index\" (click)=\"communeClicked(commune)\" value=\"{{commune.properties.commune_fr}}\">{{commune.properties.commune_fr}}</mat-button-toggle>\n</mat-button-toggle-group> -->\n<div *ngFor=\"let commune of communes; let i = index\">\n    <div class=\"commune-selection link-commune\" [ngClass] (click)=\"communeClicked($event,commune)\"> \n        <b>{{commune.properties.commune_fr}}</b>\n    </div>\n</div>","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","export function rand_color() {\r\n    let r = Math.round(Math.random() * 255);\r\n    let g = Math.round(Math.random() * 255);\r\n    let b = Math.round(Math.random() * 255);\r\n    return `rgb(${r},${g},${b})`\r\n}\r\nexport function beautify_numbers(number: number) {\r\n    const list = number.toString().split('').reverse();\r\n    const reducer = (a: string, b: string, i: number) => i % 3 !== 0 || i === 0 ? b + a : b + ` ${a}`;\r\n    return list.reduce(reducer, \"\");\r\n}\r\n\r\nexport function pt_cir(rayon:number, angle:number, dx = 0, dy = 0) {\r\n    let x = rayon * Math.cos(deg2rad(angle)) + dx;\r\n    let y = rayon * Math.sin(deg2rad(angle)) + dy;\r\n    return { \"p\": x.toFixed(2) + \" \" + y.toFixed(2), x, y };\r\n}\r\nexport function deg2rad(deg:number) {\r\n    return deg * Math.PI / 180;\r\n}","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":"webpack:///"}