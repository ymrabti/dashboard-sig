{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/app-routing.module.ts","webpack:///src/app/app-service.service.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/charts/charts.component.ts","webpack:///src/app/charts/charts.component.html","webpack:///src/app/indicateurs/indicateurs.component.ts","webpack:///src/app/indicateurs/indicateurs.component.html","webpack:///src/app/map/map.component.ts","webpack:///src/app/map/map.component.html","webpack:///src/app/navbar/navbar.component.ts","webpack:///src/app/navbar/navbar.component.html","webpack:///src/app/select-list/select-list.component.ts","webpack:///src/app/select-list/select-list.component.html","webpack:///src/environments/environment.ts","webpack:///src/helpers.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","routes","AppRoutingModule","forRoot","imports","AppServiceService","http","rootURL","layer","get","providedIn","AppComponent","service","title","communes","itineraires_collecte","displayedColumns","destroy$","bases","type","visible","source","attributions","wrapX","attributionsCollapsible","url","maxZoom","baseMaps","layers","fold","vector","currentResolution","createClusterStyle","feature","radius","geometry","getGeometry","image","fill","color","selectStyleFunction","styles_","originalFeatures","push","forEach","element","cluster2","distance","bgcolor","styleFunction","resolution","calculateClusterInfo","style","size","length","text","toString","stroke","width","originalFeature","vectorSrc","format","features","getSource","getFeatures","i","extent","j","jj","getExtent","set","url_servey","commune_selected","communes_berkane","opacity","params","couches","layerSwitcher","tipLabel","reverse","groupSelectStyle","NBR_BACS","initView","center","zoom","map","evt","console","log","view","controls","attribution","attributionOptions","render","extend","bar","minWidth","steps","duration","target","localmap","on","getView","getCenter","updateIndicateurs","getCommunes","getGeoJSONFetch","pipe","subscribe","data","global_dist","reduce","longueur","units","cumul","distanceBalMeca","Math","ceil","distanceBalElec","distanceNettoi","distanceDEB","json","bsat","filter","properties","a","c","toFixed","bom","distanceBOM","distanceBSAT","bacs_prov","Object","contains","setView","setSource","coordinates","geojsonObject","i2","ii","featres","readFeatures","srcc","random_style","ext1","all_shapes","ftre","concat","ext","min","max","min0","max0","min1","max1","x","y","centerCommunes","setCenter","setResolution","mx","setTimeout","setStyle","selector","templateUrl","styleUrls","AppModule","declarations","providers","bootstrap","ChartsComponent","length_swips","pie_prov","pie_prov_legend","pie_prov_txt","currentPage","pie_sti","setInterval","clearInterval","pie","liste_bacs","u","Map","Commune_Fr","name","percent","result","Array","from","values","com","pieChart","r","piechart","piechartlegend","province_chart","rayon","angle_start","sort","b","chart","angle","move","pt_s","pt_e","xs","ys","xe","ye","d1","p","d2","h","l","pl","d","addNs","pilegendrects","pilegendtxt","decrement","increment","IndicateursComponent","showConfig","MapComponent","NavbarComponent","SelectListComponent","commune_click","selected","event","correctTarget","nodeName","parentElement","commune_fr","emit","document","querySelectorAll","innerHTML","includes","classList","remove","toggle","environment","production","rand_color","round","random","g","beautify_numbers","number","list","split","reducer","pt_cir","dx","dy","cos","deg2rad","sin","deg","PI","bootstrapModule","catch","err","error"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\n\nconst routes: Routes = [];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AppServiceService {\n\n    constructor(private http: HttpClient) { }\n    rootURL = '/geojson';\n    getGeoJSON(layer: string) {\n        return this.http.get(this.rootURL + '/dashboard/' + layer);\n    }\n    getGeoJSONFetch(layer: string) {\n        return this.http.get(this.rootURL + '/fetch/' + layer);\n    }\n}\n","import { Component, OnDestroy, OnInit } from '@angular/core';\nimport { Subject } from 'rxjs';\nimport { takeUntil } from 'rxjs/operators';\nimport { AppServiceService } from './app-service.service';\nimport View from 'ol/View';\n// import OSM from 'ol/source/OSM';\nimport { TileWMS, Cluster, Vector as VectorSource } from \"ol/source\";\nimport SourceOSM from 'ol/source/OSM';\nimport { XYZ } from 'ol/source';\nimport SourceStamen from 'ol/source/Stamen';\nimport { defaults, FullScreen, OverviewMap, Rotate, ScaleLine, Attribution, MousePosition } from \"ol/control\";\nimport { Vector as VectorLayer } from 'ol/layer';\nimport LayerGroup from 'ol/layer/Group';\nimport TileLayer from 'ol/layer/Tile';\nimport { createEmpty, extend, getWidth, getHeight } from \"ol/extent\";\nimport { transform } from \"ol/proj\";\nimport LayerSwitcher from 'ol-layerswitcher';\nimport { GeoJSON } from 'ol/format';\nimport { Style, Circle, Fill, Stroke, Text } from \"ol/style\";\nimport Feature from \"ol/Feature\";\nimport { BaseLayerOptions, GroupLayerOptions } from 'ol-layerswitcher';\nimport Geometry from 'ol/geom/Geometry';\nimport { MapBrowserEvent } from 'ol';\nimport {length,point,booleanPointInPolygon} from \"@turf/turf\";\n\nimport MapOL from 'ol/Map';\nimport { rand_color,beautify_numbers } from '../helpers';\nimport MultiPoint from 'ol/geom/MultiPoint';\n@Component({\n    selector: 'app-root',\n    templateUrl: './app.component.html',\n    styleUrls: ['./app.component.css']\n})\nexport class AppComponent implements OnDestroy,OnInit {\n    title = 'dashbrd';\n    map: MapOL;\n    communes: any[] = [];\n    bacs_prov: any;\n    itineraires_collecte: any[] = [];\n    displayedColumns: string[] = [];\n    destroy$: Subject<boolean> = new Subject<boolean>();\n    constructor(private service:AppServiceService){}\n    bases: TileLayer[] = [\n        new TileLayer({\n            title: 'OSM',\n            type: 'base',\n            visible: true,\n            source: new SourceOSM({\n                // \n                attributions: [\n                    \"@ Younes M'rabti SDMB\"\n                ]\n            })\n        } as BaseLayerOptions),\n        new TileLayer({\n            title: 'Satellite',\n            type: 'base',\n            visible: false, wrapX: false,\n            source: new XYZ({\n                attributions: null,\n                attributionsCollapsible: false,\n                url: 'https://services.arcgisonline.com/ArcGIS/rest/services/World_Imagery/MapServer/tile/{z}/{y}/{x}',\n                maxZoom: 23\n            })\n        } as BaseLayerOptions),\n        new TileLayer({\n            title: 'Water color',\n            type: 'base',\n            visible: false,\n            source: new SourceStamen({\n                layer: 'watercolor'\n            })\n        } as BaseLayerOptions),\n        new TileLayer({\n            title: 'Toner',\n            type: 'base',\n            visible: false,\n            source: new SourceStamen({\n                layer: 'toner'\n            })\n        } as BaseLayerOptions),\n        new TileLayer({\n            title: 'Terrain Labels',\n            type: 'base',\n            visible: false,\n            source: new SourceStamen({\n                layer: 'terrain-labels'\n            })\n        } as BaseLayerOptions),\n        new TileLayer({\n            title: 'Terrain',\n            type: 'base',\n            visible: false,\n            source: new SourceStamen({\n                layer: 'terrain'\n            })\n        } as BaseLayerOptions),\n    ];\n    private baseMaps: any = new LayerGroup({\n        title: 'Fonts fe Cartes',\n        layers: this.bases,\n        fold: \"close\"\n    } as GroupLayerOptions);\n    // pdf = new jsPDF('landscape', undefined, \"a3\");\n    vector: VectorLayer = new VectorLayer();\n\n    currentResolution: number = 0;\n\n    createClusterStyle = (feature: Feature): Style => {\n        // var name = feature.get('name');\n        // var magnitude = parseFloat(name.substr(2));\n        var radius = 5 //+ 20 * (magnitude - 5);\n        return new Style({\n            geometry: feature.getGeometry(),\n            image: new Circle({\n                radius: radius,//feature.get('radius'),\n                fill: new Fill({\n                    color: [155, 0, 0]\n                })\n            })\n        });\n    }\n    selectStyleFunction = (feature: Feature): Style[] => {\n        var styles_ = [];\n        var originalFeatures = feature.get('features');\n        // console.log(originalFeatures);\n        if (originalFeatures) {\n            styles_.push(new Style({\n                image: new Circle({\n                    radius: feature.get('radius'),\n                    fill: new Fill({\n                        color: 'rgba(255, 0, 0, 0)'\n                    })\n                })\n            }));\n            originalFeatures.forEach((element: Feature<Geometry>) => {\n                styles_.push(this.createClusterStyle(element));\n            });\n        }\n        return styles_;\n    }\n    cluster2 = (url: string, distance: number, bgcolor: string): VectorLayer => {\n        let styleFunction = (feature: Feature, resolution: number): Style => {\n            if (resolution !== this.currentResolution) {\n                calculateClusterInfo(resolution);\n                this.currentResolution = resolution;\n            }\n            let style;\n            let size = feature.get('features').length;\n            if (size > 1) {\n                style = new Style({\n                    image: new Circle({\n                        radius: 10,//feature.get('radius'),\n                        fill: new Fill({\n                            color: bgcolor\n                        })\n                    }),\n                    text: new Text({\n                        text: size.toString(),\n                        fill: new Fill({\n                            color: '#fff'\n                        }),\n                        stroke: new Stroke({\n                            color: 'rgba(0, 0, 0, 1)',\n                            width: 3\n                        })\n                    })\n                });\n            } else {\n                let originalFeature = feature.get('features')[0];\n                style = this.createClusterStyle(originalFeature);\n            }\n            return style;\n        }\n\n        var vectorSrc = new VectorSource({\n            format: new GeoJSON(),\n            url,\n            /* loader: function (extent, resolution, projection) {\n                var xhr = new XMLHttpRequest();\n                xhr.open('GET', url);\n                var onError = function () {\n                    console.log(\"Error xhr\");\n                }\n                xhr.onerror = onError;\n                xhr.onload = function () {\n                    if (xhr.status == 200) {\n                        let geo_json = JSON.parse(xhr.responseText);\n                        console.log({geo_json});\n                        const format = new GeoJSON();\n                        let ftrs2Add = format.readFeatures(url, {  featureProjection: 'EPSG:3857' });\n                        console.log({ftrs2Add,geo_json});\n                        vectorSrc.addFeatures(ftrs2Add);\n                    } else {\n                        onError();\n                    }\n                }\n                xhr.send();\n            },\n            strategy:bbox  */\n        });\n        let vector = new VectorLayer({\n            title: 'BACS Référentiel',\n            visible: true,\n            source: new Cluster({\n                distance,\n                source: vectorSrc\n            }),\n            style: styleFunction\n        } as BaseLayerOptions);\n        let calculateClusterInfo = (resolution: number): void => {\n            // maxFeatureCount;\n            var features = vector.getSource().getFeatures();\n            var feature, radius;\n            for (var i = features.length - 1; i >= 0; --i) {\n                feature = features[i];\n                var originalFeatures = feature.get('features');\n                var extent = createEmpty();\n                var j = 0, jj = 0;\n                for (j = 0, jj = originalFeatures.length; j < jj; ++j) {\n                    extend(extent, originalFeatures[j].getGeometry().getExtent());\n                }\n                // maxFeatureCount = Math.max(maxFeatureCount, jj);\n                radius = 0.25 * (getWidth(extent) + getHeight(extent)) /\n                    resolution;\n                feature.set('radius', radius);\n            }\n        };\n        return vector;\n    }\n    // url_servey1: string = '/geoserver/dashboard/ows?service=WFS&version=1.0.0&request=GetFeature&typeName=dashboard%3Asurvey1&outputFormat=application%2Fjson';\n    url_servey: string = '/geojson/fetch/bacs_province';\n    commune_selected = new VectorLayer({\n        source: new VectorSource(),\n        style:new Style({\n            stroke: new Stroke({\n                color:\"red\",width:5\n            })\n        }),\n        visible:true\n    } as BaseLayerOptions);\n\n    communes_berkane: TileLayer = new TileLayer({\n        title: 'Communes de BERKANE',\n        // type: 'Overlays',\n        visible: true,\n        opacity: 0.7,\n        source: new TileWMS({\n            url: \"http://sigsrv:8080/geoserver/dashboard/wms\",\n            params: {\n                \"LAYERS\": \"communes_de_berkane\",\n                \"TRANSPARENT\": \"true\",\n                \"WIDTH\": 640,\n                \"HEIGHT\": 480\n            },\n        }),\n    } as BaseLayerOptions)\n    couches: any = new LayerGroup({\n        title: 'Couches',\n        fold: \"open\",\n        layers: [\n            new TileLayer({\n                title: 'Secteurs de berkane',\n                // type: 'Overlays',\n                visible: false,\n                opacity: 0.35,\n                source: new TileWMS({\n                    url: \"http://sigsrv:8080/geoserver/dashboard/wms\",\n                    params: {\n                        \"LAYERS\": \"secteurs_berkane\",\n                        \"TRANSPARENT\": \"true\",\n                        \"WIDTH\": 640,\n                        \"HEIGHT\": 480\n                    }\n                }),\n            } as BaseLayerOptions),\n            new TileLayer({\n                title: 'Itineraires Collecte',\n                // type: 'Overlays',\n                visible: true,\n                source: new TileWMS({\n                    url: \"http://sigsrv:8080/geoserver/dashboard/wms\",\n                    params: {\n                        \"LAYERS\": \"itineraires10\",\n                        \"TRANSPARENT\": \"true\",\n                        \"WIDTH\": 640,\n                        \"HEIGHT\": 480\n                    },\n                }),\n            } as BaseLayerOptions),\n            new TileLayer({\n                title: 'Débardeurs',\n                // type: 'Overlays',\n                visible: true,\n                opacity: 0.3,\n                source: new TileWMS({\n                    url: \"http://sigsrv:8080/geoserver/dashboard/wms\",\n                    params: {\n                        \"LAYERS\": \"debardeurs_province\",\n                        \"TRANSPARENT\": \"true\",\n                        \"WIDTH\": 640,\n                        \"HEIGHT\": 480\n                    },\n                }),\n            } as BaseLayerOptions),\n            this.communes_berkane,\n            new VectorLayer({\n\n            }),\n            this.cluster2(this.url_servey, 50, 'red'),\n            this.commune_selected\n        ]\n    } as GroupLayerOptions);\n    layerSwitcher: any = new LayerSwitcher({\n        tipLabel: \"Layer Switcher\",\n        reverse: true,\n        groupSelectStyle: 'group'\n    });\n\n    distanceBOM: string;\n    distanceBSAT: string;\n    NBR_BACS: string=\"100\";\n    distanceBalMeca: string;\n    distanceBalElec: string;\n    distanceDEB: string;\n    distanceNettoi: string;\n    \n    clickMap(): void {\n        this.map\n    }\n    exportMap(evt): void {\n        console.log(evt);\n    }\n    initView: View = new View({\n        center: [-263091.64, 4144972.30],//transform([-270494.22186113556, 4146419.677142665], \"EPSG:4326\", \"EPSG:3857\"),\n        zoom: 10.5\n    });\n    ngOnInit(): void {\n        this.map = new MapOL({\n            view: this.initView,\n            controls: defaults({\n                attribution: false, attributionOptions: {\n                    render: () => false\n                }\n            }).extend([\n                this.layerSwitcher,\n                new ScaleLine({\n                    bar: true,\n                    minWidth: 120,\n                    steps: 4, text: true\n                }),\n                new OverviewMap({\n                    layers: [this.communes_berkane]\n                }),\n                new FullScreen({\n\n                }), new Rotate({\n                    duration: 500\n                }),\n                new Attribution({}), new MousePosition({})\n            ]),\n            layers: [\n                this.baseMaps,\n                this.couches\n            ],\n            target: 'ol-map'\n        });\n        let localmap:MapOL=this.map;\n        this.map.on(\"singleclick\", function (evt: MapBrowserEvent<UIEvent>) {\n            console.log(localmap.getView().getCenter());\n        });\n        this.updateIndicateurs();\n        this.getCommunes();\n    }\n    updateIndicateurs():void{\n        this.service.getGeoJSONFetch(\"irineraire_mini_bal_meca\").pipe(takeUntil(this.destroy$)).subscribe((data: any) => {\n            let global_dist = data.features.reduce((distance: number, feature: any) => {\n                let longueur = length(feature, { units: 'meters' });\n                let cumul = distance + longueur;\n                this.distanceBalMeca = cumul.toString();\n                return cumul;\n            }, 0);\n            this.distanceBalMeca = beautify_numbers(Math.ceil(global_dist));\n            // this.distanceBalElec = k.valeur;\n        });\n        this.service.getGeoJSONFetch(\"irineraire_mini_bal_elct\").pipe(takeUntil(this.destroy$)).subscribe((data: any) => {\n            let global_dist = data.features.reduce((distance: number, feature: any) => {\n                let longueur = length(feature, { units: 'meters' });\n                let cumul = distance + longueur;\n                return cumul;\n            }, 0);\n            this.distanceBalElec = beautify_numbers(Math.ceil(global_dist));\n            // this.distanceBalElec = k.valeur;\n        });\n        this.service.getGeoJSONFetch(\"irineraire_nettoiement\").pipe(takeUntil(this.destroy$)).subscribe((data: any) => {\n            let global_dist = data.features.reduce((distance: number, feature: any) => {\n                let longueur = length(feature, { units: 'meters' });\n                let cumul = distance + longueur;\n                return cumul;\n            }, 0);\n            this.distanceNettoi = beautify_numbers(Math.ceil(global_dist));\n            // this.distanceBalElec = k.valeur;\n        });\n        this.service.getGeoJSONFetch(\"debardeurs_province\").pipe(takeUntil(this.destroy$)).subscribe((data: any) => {\n            let global_dist = data.features.reduce((distance: number, feature: any) => {\n                let longueur = length(feature, { units: 'meters' });\n                let cumul = distance + longueur;\n                return cumul;\n            }, 0);\n            this.distanceDEB = beautify_numbers(Math.ceil(global_dist));\n            // this.distanceBalElec = k.valeur;\n        });\n        this.service.getGeoJSONFetch(\"itineraires10\").pipe(takeUntil(this.destroy$)).subscribe((json: any) => {\n            let bsat = beautify_numbers(json.features.filter((i: any) => i.properties.type == \"BSAT\").reduce((a: number, c: any) => {\n                return a + length(c, { units: 'meters' });\n            }, 0).toFixed(0))\n            let bom = beautify_numbers(json.features.filter((i: any) => i.properties.type == \"BOM\").reduce((a: number, c: any) => {\n                return a + length(c, { units: 'meters' });\n            }, 0).toFixed(0));\n            this.distanceBOM = bom;\n            this.distanceBSAT = bsat;\n            this.itineraires_collecte = json;\n        });\n        this.service.getGeoJSONFetch(\"survey1\").pipe(takeUntil(this.destroy$)).subscribe((json: any) => {\n            this.NBR_BACS = json.features.length;\n            this.bacs_prov = json;\n        });\n    }\n    getCommunes():void {\n        this.service.getGeoJSONFetch(\"communes_berkane\").pipe(takeUntil(this.destroy$)).subscribe((communes: any) => {\n            this.communes = communes.features;\n            this.displayedColumns = Object.keys(communes.features[0].properties).filter(i=>i!==\"geom\");\n        });\n    }\n    \n    SetInitView(contains:boolean):void{\n        if (contains) {\n            this.map.setView(new View({\n                center: [-263091.64, 4144972.30],\n                zoom: 10.75\n            }));\n            this.commune_selected.setSource(new VectorSource({ }));\n        }\n    }\n    communeClickedPrnt(coordinates: any):void{\n        let geojsonObject = {\n            \"type\": \"Feature\",\n            \"geometry\": {\n                \"type\": \"MultiPolygon\",\n                \"coordinates\": coordinates.map((i2: any) => {\n                    return i2.map((i: any[]) => i.map(ii => transform(ii, \"EPSG:4326\", \"EPSG:3857\")));\n                })\n            }\n        };\n        let featres = (new GeoJSON()).readFeatures(geojsonObject);\n        let srcc = new VectorSource({ features: featres });\n        this.commune_selected.setSource(srcc);\n        let width = 3;\n        let random_style = (color:string) => new Style({\n            stroke: new Stroke({\n                color: color,\n                width\n            })\n        });\n        let ext1 = this.commune_selected.getSource().getExtent();\n        let all_shapes = [];\n\n        featres.forEach(ftre=>{\n            // console.log(ftre.getGeometry());\n        });\n        coordinates[0].forEach(element => {\n            all_shapes = all_shapes.concat(element);\n        });\n        all_shapes.push(all_shapes[0])\n        let ext = [\n            Math.min(...all_shapes.map(i => i[0])),\n            Math.max(...all_shapes.map(i => i[0])),\n            Math.min(...all_shapes.map(i => i[1])),\n            Math.max(...all_shapes.map(i => i[1])),\n        ];\n\n        let min0 = ext[0];\n        let max0 = ext[1];\n        let min1 = ext[2];\n        let max1 = ext[3];\n        let x = (min0 + max0) / 2;\n        let y = (min1 + max1) / 2;\n        let resolution = Math.max(max0 - min0, max1 - min1) * 360;\n\n        let centerCommunes = transform([x, y], \"EPSG:4326\", \"EPSG:3857\");\n        this.map.getView().setCenter(centerCommunes);\n        this.map.getView().setResolution(resolution);\n        let mx = 5;\n        for (let i = 0; i <= mx; i++) {\n            if (i < mx) {\n                setTimeout(() => {\n                    this.commune_selected.setStyle(random_style(rand_color()));\n                }, 100 * i)\n            }\n            else {\n                setTimeout(() => {\n                    this.commune_selected.setStyle(random_style(\"red\"));\n                }, 100 * i)\n            }\n\n        }\n\n        /* let bacs_de_pv = this.bacs_prov.features.filter(feat => {\n            let _point_ = point(feat.geometry.coordinates);\n            return booleanPointInPolygon(_point_, srcc);\n        });\n        this.NBR_BACS = bacs_de_pv.length;\n        let bacs_province = bacs_de_pv.map((i:any) => transform(i.geometry.coordinates, \"EPSG:4326\", \"EPSG:3857\"));\n        var geom = new MultiPoint(bacs_province);\n        var feature = new Feature(geom);\n        source_bacs.clear();\n        source_bacs.addFeature(feature);\n\n        let liste_bacs = bacs_de_pv.map(u => u.properties);\n        let map = new Map(liste_bacs.map(({ etat_du_ba }) => [etat_du_ba, { name: etat_du_ba, percent: 0, color: rand_color() }]));\n        for (let { etat_du_ba } of liste_bacs) map.get(etat_du_ba).percent += 1;\n        let result = Array.from(map.values());\n        let pie = result.map(com => {\n            let name = s(com.name);\n            return {\n                ...com,\n                name,\n                percent: (com.percent * 100 / result.reduce((a, c) => a + c.percent, 0)).toFixed(2)\n            };\n        });\n        pieChart(pie, 0, pie_chart2, pie_chart_legend2, false); */\n        // console.log(featres[0].getGeometry());\n    }\n    ngOnDestroy(): void {\n    }\n}\n\n","<app-navbar></app-navbar>\n<app-indicateurs\n[(distanceDEB)]=\"distanceDEB\"\n[(distanceNettoi)]=\"distanceNettoi\"\n[(distanceBalElec)]=\"distanceBalElec\"\n[(distanceBalMeca)]=\"distanceBalMeca\"\n\n[(distanceBSAT)]=\"distanceBSAT\"\n[(distanceBOM)]=\"distanceBOM\"\n[(NBR_BACS)]=\"NBR_BACS\"\n>\n\n</app-indicateurs>\n<div class=\"row dark\">\n    <div id=\"communes_berkane\" class=\"col-md-2 division\" style=\"color: rgb(161, 161, 161);\">\n        <app-select-list *ngIf=\"communes.length !== 0\" [communes]=\"communes\" (commune_click)=\"communeClickedPrnt($event)\" (setView)=\"SetInitView($event)\"></app-select-list>\n    </div>\n    <div class=\"col-lg-7\" id=\"carte\">\n        <app-map></app-map>\n    </div>\n    <div class=\"col-md-3 leftaside\">\n        <app-charts [(bacs_prov)]=\"bacs_prov\"></app-charts>\n    </div>\n\n</div>\n\n<div id=\"tabs\">\n    <mat-tab-group>\n        <mat-tab label=\"Communes\">\n            <table mat-table [dataSource]=\"communes\" class=\"table table-hover table-dark mat-elevation-z8\">\n            \n                <!--- Note that these columns can be defined in any order.\n                                    The actual rendered columns are set as a property on the row definition\" -->\n                <!--  \n                                <ng-container matColumnDef=\"position\">\n                                    <th mat-header-cell *matHeaderCellDef> No. </th>\n                                    <td mat-cell *matCellDef=\"let element\"> {{element.position}} </td>\n                                </ng-container>\n                    \n                                <ng-container matColumnDef=\"name\">\n                                    <th mat-header-cell *matHeaderCellDef> Name </th>\n                                    <td mat-cell *matCellDef=\"let element\"> {{element.name}} </td>\n                                </ng-container>\n                    \n                                <ng-container matColumnDef=\"weight\">\n                                    <th mat-header-cell *matHeaderCellDef> Weight </th>\n                                    <td mat-cell *matCellDef=\"let element\"> {{element.weight}} </td>\n                                </ng-container>\n                    \n                                \n                                <ng-container matColumnDef=\"symbol\">\n                                    <th mat-header-cell *matHeaderCellDef> Symbol </th>\n                                    <td mat-cell *matCellDef=\"let element\"> {{element.symbol}} </td>\n                                </ng-container>\n                                -->\n            \n                <ng-container [matColumnDef]=\"col\" *ngFor=\"let col of displayedColumns\">\n                    <th mat-header-cell *matHeaderCellDef> {{ col | uppercase }} </th>\n                    <td mat-cell *matCellDef=\"let element\"> {{ element.properties[col] }} </td>\n                </ng-container>\n            \n                <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n                <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\n            </table>\n        </mat-tab>\n        <mat-tab label=\"Itineraires de collecte\"> Content 2 </mat-tab>\n        <mat-tab label=\"Bacs de Réference\"> Content 3 </mat-tab>\n        <mat-tab label=\"Bacs en temps réel\"> Content 3 </mat-tab>\n    </mat-tab-group>\n</div>\n\n<!-- <button class=\"tablink\">Communes</button>\n<button class=\"tablink\">Itineraires de collecte</button>\n<button class=\"tablink\">Bacs de Réference</button>\n<button class=\"tablink\">Bacs en temps réel</button>\n\n<div id=\"Communes\" class=\"tabcontent sticky-bottom\">\n    \n</div>\n\n<div id=\"itineraires_collecte\" class=\"tabcontent sticky-bottom\">\n</div>\n\n<div id=\"bacs_reference\" class=\"tabcontent sticky-bottom\">\n</div>\n\n<div id=\"bacs_real_time\" class=\"tabcontent sticky-bottom\">\n</div>\n<div id=\"tabs\" class=\"row\">\n</div> -->\n<router-outlet></router-outlet>","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { HttpClientModule } from '@angular/common/http';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { MapComponent } from './map/map.component';\nimport { NavbarComponent } from './navbar/navbar.component';\nimport { ChartsComponent } from './charts/charts.component';\n\nimport { IndicateursComponent } from './indicateurs/indicateurs.component';\nimport { SelectListComponent } from './select-list/select-list.component';\nimport { MatTabsModule } from \"@angular/material/tabs\";\nimport { MatTableModule } from \"@angular/material/table\";\nimport { MatButtonToggleModule } from \"@angular/material/button-toggle\";\nimport { BrowserAnimationsModule } from \"@angular/platform-browser/animations\";\n\n@NgModule({\n    declarations: [\n        AppComponent,\n        MapComponent,\n        NavbarComponent,\n        ChartsComponent,\n        IndicateursComponent,\n        SelectListComponent\n    ],\n    imports: [\n        HttpClientModule,\n        BrowserModule,\n        AppRoutingModule,\n        MatTabsModule, MatTableModule,\n        BrowserAnimationsModule,\n        MatButtonToggleModule\n    ],\n    providers: [],\n    bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Component, Input, OnInit } from '@angular/core';\nimport { deg2rad, pt_cir, rand_color } from '../../helpers';\n\n@Component({\n    selector: 'app-charts',\n    templateUrl: './charts.component.html',\n    styleUrls: ['./charts.component.css']\n})\nexport class ChartsComponent implements OnInit {\n\n    constructor() { }\n    @Input() bacs_prov: any;\n    length_swips:number=2;\n    pie_prov:any[]=[];\n    pie_prov_legend:any[]=[];\n    pie_prov_txt:any[]=[];\n\n    currentPage:number = 1;\n\n    ngOnInit(): void {\n        let pie_sti=setInterval(() => {\n            console.log(this.bacs_prov);\n            if (this.bacs_prov.length !== 0) {\n                clearInterval(pie_sti);\n                this.pie(this.bacs_prov);\n            }\n        }, 1000);\n        // this.pie(this.bacs_prov);this.pieChart(pie, 0, 'pie_chart', 'pie_chart_legend', true);\n    }\n    \n    increment():void{\n        // let courbes = document.querySelectorAll(\".courbe1\");\n        this.currentPage++;\n        if (this.currentPage > this.length_swips) {\n            this.currentPage = 1;\n        }\n    }\n    decrement(): void {\n        // let courbes = document.querySelectorAll(\".courbe1\");\n        this.currentPage--;\n        if (this.currentPage <= 0) {\n            this.currentPage = this.length_swips;\n        }\n    }\n    pie(json: any): void {\n        let liste_bacs = json.features.map((u: any) => u.properties);\n        let map: any = new Map(liste_bacs.map(({ Commune_Fr }) => [Commune_Fr, { name: Commune_Fr, percent: 0, color: rand_color() }]));\n        for (let { Commune_Fr } of liste_bacs) map.get(Commune_Fr).percent += 1;\n        let result = Array.from(map.values());\n        let pie = result.map((com: any) => ({ ...com, percent: (com.percent * 100 / json.features.length).toFixed(2) }));\n        this.pieChart(pie,0,'','',true);\n    }\n    pieChart(params: any, r: number, piechart: any, piechartlegend: any, province_chart: any): void {\n        let rayon = 150;\n        let angle_start = 90;\n        /* \n        piechart.empty();\n        piechartlegend.empty();\n        let seuil = 10;let chartsactif = params.sort((a, b) => b.percent - a.percent).filter((_u, i) => i <= seuil);\n        let chartsinactif = params.sort((a, b) => b.percent - a.percent).filter((_u, i) => i > seuil);\n        let autres_names = chartsinactif.reduce((a, c, i) => {\n            return a + c.name + \", \";\n        }, \"\").split('').reduce((a, c, i) => {\n            let curr = i % 20 === 0 && i !== 0 ? c + \"<br>\" : c;\n            return a + curr;\n        }, \"\");\n        let autres = {\n            name: `Autres (${autres_names})`, color: rand_color(),\n            percent: chartsinactif.reduce((a, c) => a + parseFloat(c.percent), 0).toFixed(2)\n        } */\n        /* canvas_charte.width = 400;\n        canvas_charte.height = 400;\n        canvas_legend.width = 400;\n        canvas_legend.height = 800; */\n        // console.log(province_chart);\n        /* let ctx_charte = canvas_charte.getContext(\"2d\");\n        let ctx_legend = canvas_legend.getContext(\"2d\");\n        let canvas_charte_width = canvas_charte.width;\n        let canvas_charte_height = canvas_charte.height;\n        let canvas_legend_width = canvas_legend.width;\n        let canvas_legend_height = canvas_legend.height;\n        if (province_chart) {\n            ctx_legend.clearRect(0, 0, canvas_legend_width, canvas_legend_height);\n            ctx_charte.clearRect(0, 0, canvas_charte_width, canvas_charte_height);\n            ctx_legend.fillStyle = \"white\";\n            ctx_legend.fillRect(0, 0, canvas_legend_width, canvas_legend_height);\n            ctx_charte.fillStyle = \"white\";\n            ctx_charte.fillRect(0, 0, canvas_legend_width, canvas_legend_height);\n        } */\n        // chartsactif.concat(chartsinactif.length !== 0 ? autres : [])\n        params.sort((a: { percent: number; }, b: { percent: number; }) => b.percent - a.percent)\n            .forEach((chart: { percent: number; name: string; color: string; }, i: number) => {\n                let angle = chart.percent * 3.6;\n                let move = pt_cir(r, (angle_start + angle / 2));\n                let pt_s = pt_cir(rayon, angle_start, move.x, move.y);\n                let pt_e = pt_cir(rayon, angle_start + angle, move.x, move.y);\n                let xs = pt_s.x + move.x; let ys = pt_s.x + move.y;\n                let xe = pt_e.x + move.x; let ye = pt_e.x + move.y;\n                let title = `${chart.name} (${chart.percent} %)`;\n                let d1 = `M${xs + \" \" + ys},${move.p},${xe + \" \" + ye}A${rayon} ${rayon} 0 ${chart.percent >= 50 ? 1 : 0} 0 ${xs + \" \" + ys}`;\n                let d2 = `M${pt_s.p},${move.p},${pt_e.p}A${rayon} ${rayon} 0 ${chart.percent >= 50 ? 1 : 0} 0 ${pt_s.p}`;\n                let h = 40, p = 10, l = 40, pl = 10;\n                let x = 2 * pl + l;\n                let y = (h + p) * i + h;\n                /* if (province_chart) {\n                    let l = 30, h = 30, p = 10, pl = 10;\n                    let x = 2 * pl + l;\n                    let y = (h + p) * i + h;\n                    ctx_legend.font = \"20px Arial\";\n                    ctx_charte.beginPath();\n                    ctx_charte.moveTo(canvas_charte_width / 2, canvas_charte_height / 2);\n                    ctx_charte.arc(\n                        canvas_charte_width / 2, canvas_charte_height / 2,\n                        0.95 * Math.min(canvas_charte_width / 2, canvas_charte_height / 2),\n                        deg2rad(angle_start), deg2rad(angle_start + angle), false\n                    );\n                    ctx_charte.fillStyle = chart.color;\n                    ctx_charte.fill();\n                    ctx_charte.closePath();\n                    ctx_legend.fillStyle = chart.color;\n                    ctx_legend.fillRect(pl, (h + p) * i, l, h);\n                    ctx_legend.fillStyle = \"black\";\n                    ctx_legend.fillText(title, x, y);\n                } */\n                // ctx.stroke();\n                let piechart:any;\n                if (params.length == 1) {\n                    piechart = { r: rayon, stroke: \"red\", fill: chart.color, style: \"stroke-width:0;\", title };\n                } else {\n                    piechart = { d: d2, stroke: \"red\", fill: chart.color, style: \"stroke-width:0;\", title };\n                }\n                addNs(piechart, \"path\", \"piechart[0]\");\n                let pilegendrects = { d: `m${pl} ${(h + p) * i},${l} 0,0 ${h},${-l} 0,0 ${-h}z`, stroke: \"red\", fill: chart.color, style: \"stroke-width:1;\" };\n                let pilegendtxt = { x, y, fill: 'white', stroke: \"black\", style: `font-size:22;font-family:\"Arial\";`,title };\n                addNs(pilegendrects, \"path\", piechartlegend[0]);\n                addNs(pilegendtxt, \"text\", piechartlegend[0], title);\n                angle_start += angle;\n                this.pie_prov.push(piechart);\n                this.pie_prov_legend.push(pilegendrects);\n                this.pie_prov_txt.push(pilegendtxt);\n            });\n        /* document.body.appendChild(canvas_charte);\n        document.body.appendChild(canvas_legend);\n        return params.sort((a, b) => a.percent - b.percent); */\n    }\n}\nfunction addNs(..._args:any) {\n    \n}","<div id=\"courbe0\">\n    <button class=\"btn btn-dark arrowbtnC1L\" style=\"float:left\" (click)=\"decrement()\">\n        <i class=\"fas fa-arrow-left\"></i>\n    </button>\n    <button class=\"btn btn-dark arrowbtnC1R\" style=\"float:right;top: 0%;\" (click)=\"increment()\">\n        <i class=\"fas fa-arrow-right\"></i>\n    </button>\n    <br>\n    <div class=\"courbe1\" id=\"courbe1-1\" *ngIf=\"currentPage==1\">\n        <a>Répartition des bacs par province</a>\n        <svg width=\"100%\" viewBox=\"-200,-200,400,400\" id=\"pie_chart\" *ngIf=\"pie_prov\">\n            <path *ngFor=\"let chart of pie_prov; let i = index\" [attr.d]=\"chart.d\" [attr.stroke]=\"chart.stroke\" [attr.fill]=\"chart.fill\" style=\"stroke-width: 0;\" />\n        </svg>\n        <svg width=\"100%\" viewBox=\"0,0,600,800\" id=\"pie_chart_legend\" *ngIf=\"pie_prov_legend\">\n            <path *ngFor=\"let chart_prv of pie_prov_legend; let i = index\" [attr.d]=\"chart_prv.d\" [attr.stroke]=\"chart_prv.stroke\" [attr.fill]=\"chart_prv.fill\" style=\"stroke-width: 0;\" />\n            <text *ngFor=\"let chart_txt of pie_prov_txt; let i = index\" [attr.x]=\"chart_txt.x\" [attr.y]=\"chart_txt.y\" [attr.fill]=\"chart_txt.fill\" style=\"font-size: 22;font-family: 'Times New Roman', Times, serif;\" >{{chart_txt.title}}</text>\n        </svg>\n        <canvas id=\"pie_canv_ch\" width=\"400\" height=\"400\" style=\"border:1px solid #d3d3d3;display: none;\"></canvas>\n        <canvas id=\"pie_canv_lg\" width=\"400\" height=\"600\" style=\"border:1px solid #d3d3d3;display: none;\"></canvas>\n    </div>\n    <div class=\"courbe1\" id=\"courbe1-2\" *ngIf=\"currentPage==2\">\n        <a>États des bacs sur la commune</a>\n        <svg width=\"100%\" viewBox=\"-200,-200,400,400\" id=\"pie_chart2\">\n        </svg>\n        <svg width=\"100%\" viewBox=\"0,0,400,400\" id=\"pie_chart_legend2\">\n        </svg>\n    </div>\n    <!-- <div class=\"courbe1\" id=\"courbe1-3\" *ngIf=\"currentPage==3\">\n        <a>Table 3</a>\n    </div>\n    <div class=\"courbe1\" id=\"courbe1-4\" *ngIf=\"currentPage==4\">\n        <a>Table 4</a>\n    </div>\n    <div class=\"courbe1\" id=\"courbe1-5\" *ngIf=\"currentPage==5\">\n        <a>Table 5</a>\n    </div> -->\n</div>\n\n<!-- d=\"{{chart.d}}\" stroke=\"{{chart.stroke}}\" fill=\"{{chart.fill}}\" -->","import { Component, Input, OnInit } from '@angular/core';\n\n@Component({\n    selector: 'app-indicateurs',\n    templateUrl: './indicateurs.component.html',\n    styleUrls: ['./indicateurs.component.css']\n})\nexport class IndicateursComponent implements OnInit {\n    transportationService: any;\n\n    constructor() { }\n    bacClicked() {\n        console.log(\"bacClicked\");\n    }\n\n\n    @Input() distanceBalMeca: string;\n    @Input() distanceBalElec: string;\n    @Input() distanceNettoi: string;\n    @Input() distanceDEB: string;\n\n    @Input() NBR_BACS: string;\n    @Input() distanceBOM: string;\n    @Input() distanceBSAT: string;\n\n    showConfig() {\n        console.log(\"Config\");\n    }\n    ngOnInit(): void {\n    }\n\n}\n","<nav class=\"row\">\n    <div class=\"col-md-1\"></div>\n    <div class=\"col-md-2\">\n        <div class=\"indicateur\">\n            <a class=\"agenrem\">Distance Nettoiement</a>\n            <div data-view=\"Distance\" class=\"logo-genre\">\n                <svg width=\"50\"  height=\"50\" viewbox=\"-50,-50,100,100\">\n                    <line x1=\"-45\" y1=\"-45\" x2=\"45\" y2=\"45\" stroke=\"#987db7\" stroke-width=\"5\" />\n                </svg>\n                <br>\n                <a id=\"distanceNettoi\" class=\"logoaexc\" style=\"margin-bottom:36%;font-size: 24px;\">{{distanceNettoi}} m</a>\n            </div>\n        </div>\n    </div>\n    <div class=\"col-md-2\">\n        <div class=\"indicateur\">\n            <a class=\"aexc\">Distance BOM</a>\n            <div class=\"logo\"><svg width=\"50\"  height=\"50\" viewbox=\"-50,-50,100,100\">\n                    <line x1=\"-45\" y1=\"-45\" x2=\"45\" y2=\"45\" stroke=\"#eeee00\" stroke-width=\"5\" />\n                </svg>\n                <br>\n                <a id=\"distanceBOM\" class=\"logoaexc\" style=\"margin-bottom:36%;font-size: 24px;\">{{distanceBOM}} m</a>\n            </div>\n        </div>\n    </div>\n    <div class=\"col-md-2\">\n        <div class=\"indicateur\">\n            <a class=\"aexc\">Distance BSAT</a>\n            <div class=\"logo\"><svg width=\"50\"  height=\"50\" viewbox=\"-50,-50,100,100\">\n                    <line x1=\"-45\" y1=\"-45\" x2=\"45\" y2=\"45\" stroke=\"#eeee00\" stroke-width=\"5\" />\n                </svg>\n                <br>\n                <a id=\"distanceBSAT\" class=\"logoaexc\" style=\"margin-bottom:36%;font-size: 24px;\">{{distanceBSAT}} m</a>\n            </div>\n        </div>\n    </div>\n    <div class=\"col-md-2\">\n        <div class=\"indicateur\">\n\n            <a class=\"adec\">Distance Balayage mécanique</a>\n            <div class=\"logo\"><svg width=\"50\"  height=\"50\" viewbox=\"-50,-50,100,100\">\n                    <line x1=\"-45\" y1=\"-45\" x2=\"45\" y2=\"45\" stroke=\"#e77148\" stroke-width=\"5\" />\n                </svg>\n                <br>\n                <a id=\"distanceBalMec\" class=\"logoam\" style=\"margin-bottom:36%;font-size: 24px;\">{{distanceBalMeca}} m</a>\n            </div>\n        </div>\n\n    </div>\n    <div class=\"col-md-2\">\n        <div class=\"indicateur\">\n\n            <a class=\"ague\">Distance Balayage électrique</a>\n            <div class=\"logo\"><svg width=\"50\"  height=\"50\" viewbox=\"-50,-50,100,100\">\n                    <line x1=\"-45\" y1=\"-45\" x2=\"45\" y2=\"45\" stroke=\"#b7484b\" stroke-width=\"5\" />\n                </svg>\n                <br>\n                <a id=\"distanceBalElec\" class=\"logoag\" style=\"margin-bottom:36%;font-size: 24px;\">{{distanceBalElec}} m</a>\n            </div>\n        </div>\n    </div>\n    <div class=\"col-md-1\"></div>\n\n</nav>\n<nav class=\"row\">\n    <div class=\"col-md-4\"></div>\n\n    <div class=\"col-md-2 \">\n        <div class=\"indicateur\">\n            <a class=\"ague\">Distance Débardeurs</a>\n            <div class=\"logo\"><svg width=\"50\"  height=\"50\" viewbox=\"-50,-50,100,100\">\n                    <line x1=\"-45\" y1=\"-45\" x2=\"45\" y2=\"45\" stroke=\"#b7484b\" stroke-width=\"5\" />\n                </svg>\n                <br>\n                <a id=\"distanceDebardeurs\" class=\"logoag\" style=\"margin-bottom:36%;font-size: 24px;\">{{distanceDEB}} m</a>\n            </div>\n        </div>\n    </div>\n\n    <div class=\"col-md-2\">\n        <div class=\"indicateur\">\n            <a class=\"amoy\">Nombre de Bacs</a><br>\n            <img src=\"assets/bacicon.png\" (click)=\"showConfig()\" alt=\"bac icon\" width=\"50px\" style=\"display: inline-block;\">\n            <br>\n            <a id=\"nombre_de_bacs\" class=\"logoaexc\" style=\"margin-bottom:36%;font-size: 24px;\">{{NBR_BACS}}</a>\n        </div>\n    </div>\n    <div class=\"col-md-4\"></div>\n\n</nav>","import { Component, Input, OnInit } from '@angular/core';\n\nimport Map from 'ol/Map';\n\n@Component({\n    selector: 'app-map',\n    templateUrl: './map.component.html',\n    styleUrls: ['./map.component.css']\n})\nexport class MapComponent implements OnInit {\n    constructor() { }\n    \n\n    @Input() map: Map;\n    ngOnInit(): void {\n\n        // this.map.addControl(this.layerSwitcher);\n        // console.log(this.communes_berkane);\n    }\n\n}\n","<div class=\"tanileft\" id=\"ol-map\">\n</div>\n<div id=\"popup\" class=\"ol-popup\">\n    <a href=\"#\" id=\"popup-closer\" class=\"ol-popup-closer\"></a>\n    <header class=\"titlehead\" id=\"titlehead\"></header>\n    <div id=\"popup-content\"></div>\n</div>\n<div id=\"info\"></div>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-navbar',\n  templateUrl: './navbar.component.html',\n  styleUrls: ['./navbar.component.css']\n})\nexport class NavbarComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<nav class=\"navbar sticky-top navbar-expand-lg navbar-dark bg-dark\">\n    <div class=\"dropdown\">\n        <button class=\"dropbtn\"><i class=\"fas fa-bars\"></i></button>\n        <div class=\"dropdown-content\">\n            <a href=\"/province_berkane\">Province de Berkane</a>\n            <a href=\"/commune_berkane\">Commune de berkane</a>\n            <a href=\"/sdmb\">SDMB</a>\n        </div>\n    </div>\n    <!-- <button class=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">Click Mez\n                <span class=\"navbar-toggler-icon\"></span>\n            </button> -->\n\n    <div class=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\n        <ul class=\"navbar-nav mr-auto\">\n            <li class=\"nav-item active\">\n                <a class=\"navbar-brand nav-link\" href=\"#\" onclick=\"()=>{return false;}\">\n                    Platforme Dashboard\n                    <span class=\"sr-only\">(current)</span>\n                </a>\n            </li>\n        </ul>\n        <div class=\"dropdown dropdown-right\">\n            <button class=\"dropbtn\" title=\"Module d'Impression\">Imprimer</button>\n            <div id=\"export_dropdown\" class=\"dropdown-content\">\n                <button id=\"export-png\" name=\"exportpng\" class=\"btn btn-default\">Imprimer PNG</button>\n                <div class=\"dropdown-divider\"></div>\n                <button id=\"export-pdf\" name=\"exportpdf\" class=\"btn btn-default\">Imprimer PDF</button>\n            </div>\n\n        </div>\n        <select id=\"format\" onchange=\"typechange()\" class=\"form-control\" data-role=\"select-dropdown\" data-profile=\"minimal\">\n            <option value=\"a0\">Taille de page</option>\n            <option selected value=\"a0\">A0 (Lente)</option>\n            <option value=\"a1\">A1</option>\n            <option value=\"a2\">A2</option>\n            <option value=\"a3\">A3</option>\n            <option value=\"a4\" selected>A4</option>\n            <option value=\"a5\">A5 (Rapide)</option>\n        </select>\n        <select id=\"type\" onchange=\"typechange()\" class=\"form-control\" data-role=\"select-dropdown\" data-profile=\"minimal\">\n            <option value=\"none\">Mesurer</option>\n            <option value=\"length\">Trajet</option>\n            <option value=\"area\">Surface</option>\n        </select>\n    </div>\n</nav>\n","import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\nimport OLMAP from 'ol/Map';\nimport Feature from 'ol/Feature';\nimport GeoJSON, { GeoJSONMultiPolygon } from \"ol/format/GeoJSON\";\nimport { transform } from 'ol/proj';\nimport View from 'ol/View';\n\n\n@Component({\n    selector: 'app-select-list',\n    templateUrl: './select-list.component.html',\n    styleUrls: ['./select-list.component.css']\n})\nexport class SelectListComponent implements OnInit {\n    constructor() { }\n    @Input() communes: any[];\n    @Output() commune_click = new EventEmitter<any>();\n    @Output() setView = new EventEmitter<boolean>();\n    selected: string = \"\";\n\n    communeClicked(event: any, evt) {\n        let correctTarget = event.target.nodeName == \"DIV\" ? event.target : event.target.parentElement;\n        // console.log(correctTarget);\n        // let hasClass = correctTarget.classList.contains('active_liste_select');\n        // hasClass && correctTarget.classList.remove('active_liste_select')\n        this.selected = evt.properties.commune_fr;\n        this.commune_click.emit(evt.geometry.coordinates);\n        document.querySelectorAll(\".active_liste_select\").forEach(\n            i => {\n                if (!i.innerHTML.includes(this.selected)) {\n                    i.classList.remove('active_liste_select')\n                }\n            }\n        );\n        let contains = correctTarget.classList.contains('active_liste_select');\n        \n        this.setView.emit(contains);\n        correctTarget.classList.toggle('active_liste_select');\n    }\n    ngOnInit() {\n    }\n}\n","<div class=\"head-section\">Communes de berkane</div>\n<!-- <mat-button-toggle-group name=\"fontStyle\" aria-label=\"Font Style\">\n    <mat-button-toggle [ngClass]=\"'commune-selection link-commune'\" *ngFor=\"let commune of communes; let i = index\" (click)=\"communeClicked(commune)\" value=\"{{commune.properties.commune_fr}}\">{{commune.properties.commune_fr}}</mat-button-toggle>\n</mat-button-toggle-group> -->\n<div *ngFor=\"let commune of communes; let i = index\">\n    <div class=\"commune-selection link-commune\" [ngClass] (click)=\"communeClicked($event,commune)\"> \n        <b>{{commune.properties.commune_fr}}</b>\n    </div>\n</div>","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","export function rand_color() {\r\n    let r = Math.round(Math.random() * 255);\r\n    let g = Math.round(Math.random() * 255);\r\n    let b = Math.round(Math.random() * 255);\r\n    return `rgb(${r},${g},${b})`\r\n}\r\nexport function beautify_numbers(number: number) {\r\n    const list = number.toString().split('').reverse();\r\n    const reducer = (a: string, b: string, i: number) => i % 3 !== 0 || i === 0 ? b + a : b + ` ${a}`;\r\n    return list.reduce(reducer, \"\");\r\n}\r\n\r\nexport function pt_cir(rayon:number, angle:number, dx = 0, dy = 0) {\r\n    let x = rayon * Math.cos(deg2rad(angle)) + dx;\r\n    let y = rayon * Math.sin(deg2rad(angle)) + dy;\r\n    return { \"p\": x.toFixed(2) + \" \" + y.toFixed(2), x, y };\r\n}\r\nexport function deg2rad(deg:number) {\r\n    return deg * Math.PI / 180;\r\n}","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"]}